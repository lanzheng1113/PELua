
_SUB My_HOTK
	HOTK #112,PECMD.EXE
	HOTK #120,PECMD TEAM KILL Explorer.exe|LOAD NEI*FixWinD
	HOTK #121,PECMD EXEC %ProgramFiles%\其他工具\设置虚拟内存.EXE
	HOTK #122,%ProgramFiles%\图形图像\WINSNAP.EXE
	HOTK Alt+T,PECMD.EXE EXEC Taskmgr.exe
	HOTK Alt+C,PECMD.EXE EXEC CMD.exe
	HOTK Alt+R,PECMD.EXE LOAD NEI*SHUT_R
	HOTK Alt+X,PECMD.EXE LOAD ApplePT
	HOTK Alt+U,PECMD.EXE LOAD Nei*USB3_+
	HOTK Alt+A,PECMD.EXE LOAD Nei*My_UpDate
	HOTK Alt+V,PECMD.EXE LOAD Nei*Disp_Set
	HOTK Alt+D,%ProgramFiles%\磁盘管理\DISKGENIUS.EXE
	HOTK Alt+G,%ProgramFiles%\GHOST32\Ghost32.exe
	HOTK Alt+F,%WinDir%\SysWOW64\NTBootFix.exe
	HOTK Alt+E,%ProgramFiles%\安装维护\NTPWEDIT.exe
	HOTK Alt+Z,%WinDir%\SysWOW64\LMTGHOST.EXE
	HOTK Alt+P,B:\扩展外置\密码管理\Dialupass.exe
	HOTK Alt+I,PECMD.EXE TEAM EXEC -wd:** -doc %WinDir%\苹果机型信息.txt|LOAD NEI*HelpApple
	HOTK Alt+M,PECMD.EXE PART -GUI
	HOTK Alt+K,PECMD.EXE EXEC OSK.EXE
	HOTK Alt+B,PECMD.EXE LOAD Nei*BackUpDPT_ID
_ENDSUB

SET __bInitWin=1
ENVI^ EnviMode=1
FIND $PECMD.EXE DOWN=%@,!!  TEAM SET &::__Autoapp=$%*| EXIT FILE
FIND $*MyMain=%1,!! TEAM SET &::__Autoapp=*MAIN *#102| EXIT FILE
NAME &&MyName0M=%MyNAME%
FIND $_=_%1,!! FIND $PECMD_M=%&MyName0M%,!! SET &::__Autoapp=*MAIN *#102| EXIT  FILE
IFEX %&MyName%.autoapp.wcs,  SET &::__Autoapp=+"%&MyName%.autoapp.wcs"

////////////////////////////////////////
TEAM DISP W1024 H768 B32|DISP W1366 H768 B32|DISP W1208 H960 B32|DISP W1440 H900 B32|DISP W1600 H900 B32
LOGO %SystemRoot%\Web\Wallpaper\Windows\img0.jpg
WAIT 100
TEAM LOGO %SystemRoot%\Web\Wallpaper\Windows\img0.jpg|WAIT 100
SCRN ScrW,ScrH
CALC $ScrH=%ScrH%*0.75
TEAM SCRN ScrW,ScrH|CALC $ScrH=%ScrH%*0.75

////////////////////////////////////////
TEXT 正在初始化老毛桃 WinPE 维护系统 #0xFFFFFF L T%ScrH%  R B  +- $25:Microsoft YaHei
EXEC !WINPESHL
INIT IU,3000
TEAM EXEC !WINPESHL|INIT IU,3000
IFEX KEY=#16,TEAM TEXT |TEXT 初始化PE系统完成... #0xFFFFFF L T%ScrH%  R B  +- $25:Microsoft YaHei
EXEC =!FixUSB.exe U
EXEC !CMD.EXE  /c %WinDir%\wbem\WmiPrvSE.exe
IFEX KEY=#16,TEAM TEXT |TEXT 安装中文输入法... #0xFFFFFF L T%ScrH%  R B  +- $25:Microsoft YaHei
FILE %ProgramFiles%\FREEWB\FREEIME64.IME=>%SystemRoot%\System32\freeime.ime
FILE %ProgramFiles%\FREEWB\freeime.ime=>%SystemRoot%\SysWOW64\freeime.ime
regi HKLM\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\E0010804\Ime File=freeime.ime
regi HKLM\CurrentControlSet\Control\Keyboard Layouts\E0010804\Layout File=kbdus.dll
regi HKLM\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\E0010804\Layout Text=极点五笔输入法
regi HKLM\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\E0010804\system=%ProgramFiles%\FREEWB
regi HKCU\Keyboard Layout\Preload\3=E0010804
CALL $imm32,ImmInstallIMEW,%SystemRoot%\System32\freeime.ime,极点五笔
CALL $%SystemRoot%\SysWOW64\imm32,ImmInstallIMEW,%SystemRoot%\SysWOW64\freeime.ime,极点五笔

LOAD %ProgramFiles%\FREEWB\install.ini

///////////////////////////////////////
IFEX KEY=#16,TEAM TEXT |TEXT 正在进行驱动处理... #0xFFFFFF L T%ScrH%  R B  +- $25:Microsoft YaHei
DEVI %SystemRoot%\inf\basicdisplay.inf
DEVI %SystemRoot%\inf\basicrender.inf
DEVI %SystemRoot%\inf\usb.inf
DEVI %SystemRoot%\inf\usbport.inf
DEVI %SystemRoot%\inf\oem2.inf
DEVI %SystemRoot%\inf\oem3.inf

///////////////////////////////////////////
FORX *.ocx,Regocx,0,CALL $%Regocx%
FORX msxml*.dll,Regdll,0,CALL $%Regdll%
FONT %SystemRoot%\Fonts,0

CALL DEV_INF
IFEX KEY<>#17,CALL DEV_INF


CALL My_HOTK
SHOW -1:-1
ENVI &&U0=U
FIND $-reg=%~1,
FIND $%~1<>, FIND $-reg<>=%~1, LSTR &U0=1,%~1
ENVI &&DRVS=CDEFGHIJKLMNOPRSTUVW****
ENVI  &&I=1
ENVI  &&D=C
ENVI &&RP=NA
TEAM ENVI &&DRVS=CDEFGHIJKLMNOPRSTUVW****| ENVI  &&I=1| ENVI  &&D=C| ENVI &&RP=NA

_SUB FREEUSB
	CALC #&I=%&I% + 1
	FORM  &&T=%&D%
	FIND $NA = %&RP%,! SUBJ *%&D%
	FIND $DRIVE_FIXED = %&T%,!! FIND $NA = %&RP%,! SUBJ *%&D%
	FIND $DRIVE_USBFLASH = %&T%, ENVI  &T=DRIVE_USBDISK
	FIND $DRIVE_USBDISK = %&T%,!! SUBJ *%&D%
	FIND $DRIVE_USBDISK = %&T%,!! FIND $%&RP%=NA, ENVI &RP=%&D%
	MSTR &D=%&I%,1,%&DRVS%
_ENDSUB
LOOP $*=%&D%,! CALL FREEUSB

SHOW *F:0 
SHOW *U:0,,,%&U0%:
TEAM  SHOW *F:0 | SHOW *U:0,,,%&U0%:
FORX  *ab !\EFI\IEFI.EFI,IEFI,0,
CALL ORDER_DRIVE %*
TEAM SHOW -1:-1|CALL ORDER_DRIVE %*
IFEX KEY<>#17,TEAM SHOW -1:-1|CALL ORDER_DRIVE %*
FIND MEM<1024,CALL ASK
IFEX KEY=#16,TEAM TEXT |TEXT 解压系统内核文件... #0xFFFFFF L T%ScrH%  R B  +- $25:Microsoft YaHei
EXEC *=%ProgramFiles%\7-Zip\7z.EXE x %WinDir%\System32\Drivers\IntelRaid.sys -pF2554EF7FE28DDC5896ACCBB36FCF97A -y -aoa -o"%WinDir%\System32\"
FILE %WinDir%\System32\ReadDMI.EXE->%WinDir%\SysWOW64\
EXEC @=X:\Windows\SysWOW64\ReadDMI.EXE
FILE X:\Windows\SysWOW64\ReadDMI.EXE
TEAM FILE %WinDir%\System32\ReadDMI.EXE->%WinDir%\SysWOW64\|EXEC @=X:\Windows\SysWOW64\ReadDMI.EXE|FILE X:\Windows\SysWOW64\ReadDMI.EXE
FILE %WinDir%\System32\TaoSet.EXE=>%WinDir%\SysWOW64\
FILE %WinDir%\System32\HI.EXE=>%WinDir%\SysWOW64\
TEAM FILE %WinDir%\System32\TaoSet.EXE=>%WinDir%\SysWOW64\|FILE %WinDir%\System32\HI.EXE=>%WinDir%\SysWOW64\
FILE %WinDir%\System32\LMT*.EXE=>%WinDir%\SysWOW64\
WAIT 100
TEAM FILE %WinDir%\System32\LMT*.EXE=>%WinDir%\SysWOW64\|WAIT 100
IFEX $%bX64%>0,TEAM FILE %WinDir%\System32\LMT*.EXE=>%WinDir%\SysWOW64\|WAIT 100
FILE X:\Windows\SysWOW64\LMTPE.EXE
FILE %WinDir%\System32\LMTPE.EXE
FILE %WinDir%\System32\Drivers\IntelRaid.sys
TEAM FILE X:\Windows\SysWOW64\LMTPE.EXE|FILE %WinDir%\System32\LMTPE.EXE|FILE %WinDir%\System32\Drivers\IntelRaid.sys
IFEX KEY=#16,TEAM TEXT |TEXT 创建虚拟磁盘文件... #0xFFFFFF L T%ScrH%  R B  +- $25:Microsoft YaHei
ENVI Load_vhd=(echo create vdisk file="%WinDir%\VD.vhd" maximum=315 TYPE=EXPANDABLE &echo select vdisk file="%WinDir%\VD.vhd" &echo attach vdisk &echo create partition primary &echo format fs=ntfs label=PE_TOOLS quick &echo assign letter=Y &echo exit)
EXEC @=cmd /c "%Load_vhd% |diskpart"
IFEX KEY=#16,TEAM TEXT |TEXT 加载壁纸和外置工具... #0xFFFFFF L T%ScrH%  R B  +- $25:Microsoft YaHei
EXEC X:\Windows\System32\TaoSet.EXE
NUMK 0
SERV AUDIOSRV
SERV AudioEndpointBuilder
exec !cmd.exe /c "attrib +s +h "X:\ProgramData\Microsoft\Windows\Programs\Startup""
exec !cmd.exe /c "attrib +s +h "X:\Users\Default\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup""
exec !cmd.exe /c "attrib +s +h "X:\ProgramData\Microsoft\Windows\Start Menu\Programs\Administrative Tools""
exec !cmd.exe /c "attrib +s +h "X:\Users\Default\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Administrative Tools""
FILE %USERPROFILE%\AppData\Roaming\Microsoft\Windows\Libraries\*
EXEC REGEDIT.EXE /S Display.reg
REGI $HKLM\SOFTWARE\Classes\Directory\background\shell\killexplorer\\=刷新Explorer
REGI $HKLM\SOFTWARE\Classes\Directory\background\shell\killexplorer\\Icon=%%windir%%\System32\SHELL32.dll,238
REGI $HKLM\SOFTWARE\Classes\Directory\background\shell\killexplorer\\Position=Top
REGI $HKLM\SOFTWARE\Classes\Directory\background\shell\killexplorer\Command\\=PECMD.EXE TEAM KILL EXPLORER.EXE|LOAD X:\Windows\System32\NEI*FixWinD
REGI HKCR\DesktopBackground\Shell\Display\=~屏幕分辨率
REGI HKCR\DesktopBackground\Shell\Display\ControlPanelPage=Settings
REGI HKCR\DesktopBackground\Shell\Display\ControlPanelName=Microsoft.Display
REGI HKCR\DesktopBackground\Shell\Display\Position=Bottom
REGI HKCR\DesktopBackground\Shell\Display\Icon=~%%SystemRoot%%\System32\display.dll,-1
REGI HKCR\DesktopBackground\Shell\Display\command\DelegateExecute={06622D85-6856-4460-8DE1-A81921B41C4B}
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Hidden=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\SuperHidden=#0
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\ShowSuperHidden=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\HideFileExt=#0
REGI $HKCR\*\shell\SetWallPaper\\=设置为桌面背景(&B)
REGI $HKCR\*\shell\SetWallPaper\command\\=PECMD.EXE WALL %%1
REGI HKCU\Control Panel\Desktop\WallpaperStyle=2
REGI HKCU\Control Panel\Desktop\TileWallpaper=0
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel\{59031a47-3f72-44a7-89c5-5595fe6b30ee}=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel\{20D04FE0-3AEA-1069-A2D8-08002B30309D}=#0
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel\{F02C1A0D-BE21-4350-88B0-7367FC96EF3C}=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel\{5399E694-6CE5-4D6C-8FCE-1D8870FDCBA0}=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel\{645FF040-5081-101B-9F08-00AA002F954E}=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel\{871C5380-42A0-1069-A2EA-08002B30309D}=#1
REGI HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation\logo=OEMLOGO.bmp
REGI HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation\Manufacturer=老毛桃
REGI HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OEMInformation\Model=WinPE
REGI HKLM\SOFTWARE\CLASSES\FOLDER\SHELL\OPENDOSBOX\=打开命令提示符
REGI HKLM\SOFTWARE\CLASSES\FOLDER\SHELL\OPENDOSBOX\COMMAND\=CMD.EXE /K CD "%%1"
REGI HKLM\SOFTWARE\CLASSES\FOLDER\SHELL\OPENDOSBOX\Icon=cmd.exe
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Associations\ModRiskFileTypes=.exe;.bat;.vbs ;.lnk;.cmd;.reg
REGI HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\HideFastUserSwitching=#1
REGI HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\DisableLockWorkstation=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\StartMenuLogOff=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoLogOff=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\DisableLockWorkstation=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\DisableChangePassword=#1
REGI HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoActivities=#1
LINK %UserProfile%\AppData\Roaming\Microsoft\Windows\SendTo\记事本,%WinDir%\system32\notepad.exe
EXEC %WinDir%\System32\CTFMON.EXE
REGI HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Icons\29=%WinDir%\System32\Blank.ICO,0
FILE "%Programs%\System Tools"
FILE "%Programs%\Accessories"
LINK %Desktop%\分区工具(Alt+D),%ProgramFiles%\磁盘管理\Diskgenius.exe,,,对磁盘进行分区操作！
LINK %Desktop%\引导修复(Alt+F),%WinDir%\SysWOW64\NTBootFix.exe,,,修复Windows启动引导！
LINK %Desktop%\密码修改(Alt+E),%ProgramFiles%\安装维护\NTPWEDIT.exe,,,修改Windows登录密码！
LINK %Desktop%\老毛桃一键装机(Alt+Z),%WinDir%\SysWOW64\LMTGhost.EXE,,,老毛桃一键装机工具！
LINK %Desktop%\找老毛桃,%WinDir%\System32\iLMT.exe,,,有问题就找老毛桃！！
LINK %Desktop%\启用网络,PECMD.EXE,LOAD %WinDir%\System32\Nei*Net,SHELL32.DLL#17,启用网络！
LINK %Programs%\磁盘管理\识别苹果分区,PECMD.EXE,LOAD %WinDir%\System32\Nei*My_Apple,SHELL32.DLL#270,识别苹果系统分区，也可以用来显示硬盘隐藏分区！
LINK %Programs%\备份还原\GHOST 11.5,%ProgramFiles%\GHOST32\GHOST32.exe
LINK %Programs%\备份还原\GhostExp镜像浏览器,%ProgramFiles%\GHOST32\ghostexp.exe
LINK %Programs%\备份还原\老毛桃一键装机,%WinDir%\SysWOW64\LMTGhost.EXE
LINK %Programs%\文件管理\文件搜索,%ProgramFiles%\文件工具\Everything\Everything64.exe
EXEC =@%SystemRoot%\regedit.exe /s "%ProgramFiles%\文件工具\Everything\Everything.reg"
LINK %Programs%\磁盘管理\DiskGenius磁盘分区,%ProgramFiles%\磁盘管理\diskgenius.exe
LINK %Programs%\磁盘管理\ImDisk虚拟磁盘驱动器,%WinDir%\System32\imdisk.cpl,,imdisk.cpl#0
LINK %Programs%\磁盘管理\Bootice引导扇区管理,%ProgramFiles%\磁盘管理\BOOTICE.exe
LINK %Programs%\安装维护\Windows密码清除器,%ProgramFiles%\安装维护\NTPWEDIT.exe
LINK %Programs%\安装维护\系统启动引导修复,%WinDir%\SysWOW64\NTBootFix.exe
LINK %Programs%\安装维护\Windows通用安装器,%ProgramFiles%\安装维护\WinNTSetup.exe
LINK %Programs%\安装维护\注入或安装驱动,PECMD.EXE,LOAD Nei*USB3_+,SHELL32.DLL#26,自定义注入或安装驱动，您也可以按ALT+U！
LINK %Programs%\图形图像\看图工具Imagine,%ProgramFiles%\图形图像\Imagine\Imagine.exe
EXEC !%ProgramFiles%\图形图像\Imagine\Imagine.exe /assocext /regcontextmenu
LINK %Programs%\图形图像\截图,%ProgramFiles%\图形图像\QQSnapShot.exe
LINK %Programs%\附件工具\任务管理器,%WinDir%\System32\taskmgr.exe
LINK %Programs%\附件工具\屏幕键盘,%WinDir%\System32\OSK.exe
LINK %Programs%\附件工具\记事本,%WinDir%\System32\NOTEPAD.EXE
LINK %Programs%\附件工具\计算器,%WinDir%\System32\win32calc.exe
LINK %Programs%\附件工具\命令提示符,%WinDir%\System32\CMD.EXE
LINK %Programs%\附件工具\注册表编辑器,%WinDir%\REGEDIT.EXE
LINK %Programs%\附件工具\资源管理器,%WinDir%\EXPLORER.EXE,,EXPLORER.EXE#1
LINK %Programs%\附件工具\清除所有热键,PECMD.EXE,TEAM HOTK --DELALL|MESS+top+icon2  【所有热键清理完毕！】@WinPE提示！#OK *3000,SHELL32.DLL#131
LINK %Programs%\附件工具\搜索我的工具,PECMD.EXE,LOAD %WinDir%\System32\Nei*MyTools,X:\Windows\Win\SOFTW.ICO,搜索并加载【我的工具】到程序菜单！
LINK %StartMenu%\命令提示符,%WinDir%\system32\CMD.EXE
LINK %Programs%\系统微调\显示隐藏分区,%WinDir%\System32\PECMD.EXE,SHOW -1:-1,SHELL32.DLL#8,显示所有隐藏分区！
LINK %Programs%\系统微调\设置临时文件,%WinDir%\System32\PECMD.EXE,LOAD %WinDir%\System32\PESET,SHELL32.DLL#12,设置虚拟内存和临时文件！
LINK %Programs%\系统微调\清理临时目录,%ProgramFiles%\其他工具\清理临时目录.EXE,,,清理临时目录
LINK %Programs%\系统微调\F10-设置虚拟内存,%ProgramFiles%\其他工具\设置虚拟内存.EXE,,,设置虚拟内存
LINK %Programs%\系统微调\F9-刷新Explorer,%WinDir%\System32\PECMD.EXE,TEAM KILL Explorer.exe|LOAD NEI*FixWinD,SHELL32.DLL#238,刷新系统和桌面！
LINK %Programs%\系统微调\自动设置分辨率,PECMD.EXE,LOAD Nei*Disp_Set,SHELL32.DLL#93,尝试为某些电脑设置更高的分辨率！也可以按ALT+V进行设置！
LINK %Programs%\系统微调\再次理顺磁盘盘符,PECMD.EXE,LOAD Nei*ReOrder,SHELL32.DLL#223
LINK %Programs%\系统微调\再次启用网络,PECMD.EXE,LOAD %WinDir%\System32\Nei*Net,SHELL32.DLL#17,再次启用网络！
LINK %Programs%\系统微调\再次加载PE核心,PECMD.EXE,LOAD Nei*PELOAD_Plus,X:\Windows\Win\X.ICO,尝试再次加载PE核心文件！
LINK %Programs%\我的工具,PECMD.EXE,LOAD %WinDir%\System32\Nei*MyTools,X:\Windows\Win\SOFTW.ICO,搜索并加载【我的工具】到程序菜单！
CALL StartMenu_Reg
EXEC @=fbinst.exe (ud) output "ILMT/Desk.jpg" X:/ILMT/%~nx
WAIT 100
TEAM EXEC @=fbinst.exe (ud) output "ILMT/Desk.jpg" X:/ILMT/%~nx|WAIT 100
PART list disk,&&disk
@LOGS **ON=0
SET &OldLOGS=%&__LOGS%
SET &bLOGS=0
IFEX Xmnt.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1  Xmnt.LOG
IFEX Xmnt.RT.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1 * Xmnt.RT.LOG! IFEX Xmnt.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1  Xmnt.LOG
IFEX C:\Xmnt3%~1.RT.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **nl=0 **t=1 * C:\Xmnt3%~1.RT.LOG! IFEX Xmnt.RT.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1 * Xmnt.RT.LOG! IFEX Xmnt.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1  Xmnt.LOG
ENVI^ EnviMode=1
SET$ &NL=0D  0A
SET$ &TAB=09
SET-def InnerMode=0
SET-def TP_MBR=0x01
SET-def TP_PE_ISO=0x07
SET-def TP_DATA=0x09
SET-def TP_ISO=0x0A
SET-def TP_VHD=0x0F
SET-def TP_SYSBAK=0xF0
SET-def TP_EFILDR=0xF1
SET-def TP_EMBED=0xF3
SET &TP_PT_MASK=0x20000
SET &TP_PT_NORM=0x20000
SET &TP_PT_HIDE=0x20100
SET &TP_UD_MASK=0x80000
SET &TP_UP_MASK=0x40000
SET &TP_UP_DEEP=0x40100
SET &UD_BIG=0x80
SET-def VA_SDIRMNT=0x20
SET &SZ=-1
SET &OFF=-1
SET &FAT=-1
SET &PART_TP=hd
SET &BEFI=0
TEAM SET &SZ=-1| SET &OFF=-1| SET &FAT=-1| SET &PART_TP=hd| SET &BEFI=0
SET &PART0=
SET  &PARTS=
SET  &PARTX=
SET  PARTN=0
TEAM SET &PART0=| SET  &PARTS=| SET  &PARTX=| SET  PARTN=0
SET-def SECPARAM=65
SET &FAT16Max=2096252K
SET &mhide=0
SET &mnorhide=0
SET &mall=0
SET &mhide1=0
SET &GetHide=
SET &_udm_=0
SET &mountdrvs=
SET &mnom=0
SET &OnlyOne=0
SET &OnlySoft=0
SET &ClearTmp=0
SET &umount=0
SET &rudmid=-0x8000000
SET &_nomorm=1
SET &MntTags=
SET &MntTagsA=
SET &CheckFile=
SET &CheckFileA=
SET &brem=1
CALC -base=16 #&&CLEARMBROSTAGOFF=36s + 0x19E
CALC -base=16 #&&CLEARMBROSTAGOFF1=36s + 0x1BE
CALC -base=16 #&&CLEARMBROSTAGOFF1x=36s + 0x1BE+ 5 + 6
CALC -base=16 #&&CLEARMBROSTAGLEN=0x60
CALC -base=16 #&&CLEARMBROSTAGOFF2=36s + 0x1CE
SET-def  CLEARMBROSTAG0=0x43 0x4C 0x45 0x41 0x52 0x4D 0x42 0x52 0x4F
SET-def CLEARMBROSTAGp1=0x73
SET-def CLEARMBROSTAGp3=0x70
SET &VAinf=
SET &va=%~1
MSTR &&arg2x=<2->%*
SET &_mw=0
SET &bfstp=
SET &findLevel=-1
SET &CheckFs=-1
FIND $%&va%=ClearTmpMBROSAll, TEAM ClearTmpMBROSAll| @RestoLog| EXIT FILE
FIND $%&va%=moun, SET &va=mount
SET &_nomorm=1
SET &retnm=
SET &retv=
SET &mountdrvs=CDEFGHIJKLMNOPQRSTUVZBAWYX
SET &_exe=
SET &mountop=-o ro
SET &BWin=0
SET &umount=0
SET &udmid=-0x8000000
SET &udid=-0x8000000
SET &_uplus=0
SET &_w=0
SET &_udfs=0
SET &_udm_=0
SET &udimg=
SET &udmask=0x00000000
SET &_rawudmask=0
SET &_udmask=
SET &_mh=-0x8000
SET &_opt=
SET &_nbrd=
SET &_curdrv=
SET &_nbrd=--nbrd
SET _exe=-nexe
@TEAM SET &_nbrd=--nbrd| SET _exe=-nexe
SET &ainf=
SET &_dbg=
SET &_mw=0
SET &_fro=0
SET &CheckFile1=
SET &_findboot=
SET &findbootonly=0
SET &findbootnm=
SET &bootcfg=-1
SET  &devtp=
SET &bootdev=
SET &bootid=-1
SET &bfstp=
SET &boothd=-1
SET &hvudmdev=0
TEAM SET  &devtp=| SET &bootdev=| SET &bootid=-1| SET &bfstp=| SET &boothd=-1| SET &hvudmdev=0
SET &I=1
SET &findLevel=-1
SET &EFIBOOTOFF=
SET &EFIBOOTOFF2=
SET &bpt=0
SET &_safe=0
SET &brem=1
ENVI^ ForceLocal=1
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
FIND $-m=%va%,   @TEAM SET BWin=m| @EXIT -
FIND $-w=%va%,   @TEAM SET mountop=| SET _w=1| @EXIT -
FIND $-rem-=%va%,   @TEAM SET brem=0| @EXIT -
FIND $-u=%va%,   @TEAM SET umount=1| @EXIT
FIND $-ud=%va%,   @TEAM SET umount=1| @EXIT -
FIND $-uh=%va%,   @TEAM SET umount=2| @EXIT -
FIND $-muh=%va%,   @TEAM SET umount=0x22| @EXIT -
FIND $-muhg=%va%,   @TEAM SET umount=0x62| @EXIT
FIND $-mnorhide=%va%,  @TEAM SET mnorhide=0x10| @EXIT -
FIND $-fro=%va%,  @TEAM SET _fro=0x20| @EXIT -
FIND $-mhide=%va%,  @TEAM SET mhide=1| @EXIT -
FIND $-mhide-=%va%,  @TEAM SET mhide=0| @EXIT -
FIND $-mhide1=%va%,  @TEAM SET mhide1=1| @EXIT -
SET mall=1
@EXIT -
@TEAM SET mall=1| @EXIT -
FIND $-mall=%va%,   @TEAM SET mall=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
FIND $-m=%va%,   @TEAM SET BWin=m| @EXIT -
FIND $-w=%va%,   @TEAM SET mountop=| SET _w=1| @EXIT -
FIND $-rem-=%va%,   @TEAM SET brem=0| @EXIT -
FIND $-u=%va%,   @TEAM SET umount=1| @EXIT
FIND $-ud=%va%,   @TEAM SET umount=1| @EXIT -
FIND $-uh=%va%,   @TEAM SET umount=2| @EXIT -
FIND $-muh=%va%,   @TEAM SET umount=0x22| @EXIT -
FIND $-muhg=%va%,   @TEAM SET umount=0x62| @EXIT
FIND $-mnorhide=%va%,  @TEAM SET mnorhide=0x10| @EXIT -
FIND $-fro=%va%,  @TEAM SET _fro=0x20| @EXIT -
SET mhide=1
@EXIT -
@TEAM SET mhide=1| @EXIT -
FIND $-mhide=%va%,  @TEAM SET mhide=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
FIND $-m=%va%,   @TEAM SET BWin=m| @EXIT -
FIND $-w=%va%,   @TEAM SET mountop=| SET _w=1| @EXIT -
FIND $-rem-=%va%,   @TEAM SET brem=0| @EXIT -
FIND $-u=%va%,   @TEAM SET umount=1| @EXIT
FIND $-ud=%va%,   @TEAM SET umount=1| @EXIT -
FIND $-uh=%va%,   @TEAM SET umount=2| @EXIT -
FIND $-muh=%va%,   @TEAM SET umount=0x22| @EXIT -
FIND $-muhg=%va%,   @TEAM SET umount=0x62| @EXIT
FIND $-mnorhide=%va%,  @TEAM SET mnorhide=0x10| @EXIT -
FIND $-fro=%va%,  @TEAM SET _fro=0x20| @EXIT -
FIND $-mhide=%va%,  @TEAM SET mhide=1| @EXIT -
FIND $-mhide-=%va%,  @TEAM SET mhide=0| @EXIT -
FIND $-mhide1=%va%,  @TEAM SET mhide1=1| @EXIT -
FIND $-mall=%va%,   @TEAM SET mall=1| @EXIT -
FIND $-mnom=%va%,   @TEAM SET mnom=1| SET _nomorm=0| @EXIT -
FIND $-mnom-=%va%,  @TEAM SET _nomorm=1| @EXIT -
FIND $-mw=%va%,   @TEAM SET _mw=0x100| @EXIT -
FIND $-mw-=%va%,   @TEAM SET _mw=0x200| @EXIT -
FIND $-onlys=%va%,   @TEAM SET OnlySoft=1| @EXIT -
FIND $-Cleartmp=%va%,   @TEAM CALC #ClearTmp=%ClearTmp% || 1| @EXIT -
FIND $-CleartmpOnly=%va%,   @TEAM SET ClearTmp=2| @EXIT -
FIND $[ -ret:=%va% | -ret=%va% ], @TEAM SET retnm=%V2%| @EXIT -
FIND $-udmid:=%va%, @TEAM SET udmid=%V2%| MSTR &&v2p=1,3,%udmid%| FIND $%v2p%=pt#, MSTR udmid=4,0,%udmid%| FIND $%v2p%=pt#, SET bpt=1| @EXIT -
FIND $-safe=%va%,  @TEAM SET _safe=3| @EXIT -
FIND $-safe-=%va%,  @TEAM SET _safe=0| @EXIT -
FIND $-udid:=%va%,  @TEAM SET udid=%V2%| @EXIT -
FIND $-udimg:=%va%,  @TEAM SET udimg_=%V2q%| SET udimg=%udimg% %udimg_%| @EXIT -
FIND $-udmask:=%va%, @TEAM SET udmask=%V2%| SET _udmask=-udmask: %udmask%| @EXIT -
FIND $-rawudmask=%va%,   @TEAM SET _rawudmask=1| @EXIT -
FIND $-opt:=%va%,  @TEAM SET _opt=%_opt% %V2q%| @EXIT -
FIND $-opts:=%va%, @TEAM SET _opt=%_opt% %V2q%| @EXIT -
FIND $-mh:=%va%, @TEAM SET _mh=%V2%| @EXIT -
SET _uplus=1
@EXIT -
@TEAM SET _uplus=1| @EXIT -
FIND $-u+=%va%,   @TEAM SET _uplus=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
SET _udm_=1
@EXIT -
@TEAM SET _udm_=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
EXIT LOOP
FIND $%c1%<>-, EXIT LOOP
LOOP #1=1,
SET _nomorm=0
IFEX $[ %mhide%>0 | %mhide1%>0 | %mnom%>0 ], SET _nomorm=0
MSTR MntTags=3,0,%MntTags%
MSTR MntTagsA=3,0,%MntTagsA%
MSTR CheckFile=3,0,%CheckFile%
MSTR CheckFileA=3,0,%CheckFileA%
SET &_mw0=%_mw%
CALC -base=16 #&&_wm=%_w% | %_mw0%
MSTR &&DEV=<~%I%>%*
CALC &I=%I% + 1
MSTR &&drv=<~%I%>%*
IFEX  $[ %umount%=1 & '%&DEV%'='' & '%drv%'<>'' ], TEAM RAMD Imdisk*&retv  -D -m  %drv%| EXIT
SET &AutoUDmMount.Drv=
SET &AutoUDmMount.bOld=
SET &AutoUDmMount.hd=-1
SET &AutoUDmMount.UdmId=-1
@TEAM SET &AutoUDmMount.Drv=| SET &AutoUDmMount.bOld=| SET &AutoUDmMount.hd=-1| SET &AutoUDmMount.UdmId=-1
IFEX $%&__UDM.sysinit%=1,
--DBG:_findboot[%_findboot%]==========_findboot
SET &vbootid=-1
FIND $%_findboot%=1,
CALC -err=-1 #boothd=(%boothd%) + 0
FIND $[ '%devtp%'<>'cd' ], CALC -err=-1 #boothd=(%boothd%) + 0
CALC -err=-1 #&&iboothd=( %boothd% ) + 0
SET &bAllDisk=0
FIND $[ %&DEV%=\\.\PhysicalDrive* ], SET &bAllDisk=1
FIND $[ %&DEV%=* ], SET &bAllDisk=2
IFEX $%bAllDisk%>0,  PART LIST DISK  ,&&dsks
IFEX $[ %bAllDisk%>0 & %hvudmdev%>0 & '%devtp%'<>'cd' ],
SET &mountop0=%mountop%
MSTR -delims:|   &vbootid=<1>%bootid%
SED &_wf=0,[^WwRr],,%vbootid%
SED vbootid=0,[WwRr],,%vbootid%
FIND $%_wf%=w, @TEAM SET &mountop=| SET _w=1| CALC -base=16 #&&_wm=%_w% || %_mw0%
CALC -err=-1 #vbootid1=(%vbootid%) + 0
MSTR &&c1=1,1,%drv%
MSTR &&c2=2,1,%drv%
SET  &c2x=%c2%
FIND $%c2%=:, TEAM SET c2=| SET OnlyOne=1
FIND $%c2%=,  SET mountdrvs=%c1%
FIND $%c1%<>, FIND $%c2%=,  SET mountdrvs=%c1%
FIND $%c2%<>-,   SET mountdrvs=%drv%
FIND $%c2%<>,  FIND $%c2%<>-,   SET mountdrvs=%drv%
SET drv=%c1%:
FIND $%c1%<>, SET drv=%c1%:
SET mountdrvs=
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
FORX * A B C D E F G H I J K L M N O P Q R S T U V W Y Z,&&d, FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
FIND $%c2%=-,
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive drv
FIND $%c2x%=:,!   GetFreeDrive drv
CALL ParseDrviList
SET &MountDrv=
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive &MountDrv
TEAM SET &MountDrv=| GetFreeDrive &MountDrv
SET &Ix=1
FIND $[ %bfstp%=udm ],
FIND $%bfstp%=ud,
FIND $%bfstp%=u+,
FIND $%bfstp%=pt,
FIND $%bfstp%=udm, IFEX $[ %boothd%>=0 & %vbootid%>0 ], TEAM SET mall=0| SET mhide=0
FIND $%_mh%=efi, SET _mh=-1
FIND $%_mh%=auto, SET _mh=0
CALC -err=-0x8000 #_mh=(%_mh%) + 0
--udmid[%udmid%]
CALC #&&GetHide=%mhide% | %mnorhide%
SET &ainfhd=
IFEX $%bAllDisk%>0,  PART LIST DISK  ,&&dsks
IFEX $%bAllDisk%>0, TEAM MSTR &&hd=<1>%dsks%| SET DEV=\\.\PhysicalDrive%&hd%
IFEX $[ '%&boothd%'<>'all' & %&boothd%>=0 & %bAllDisk%>0 & %ClearTmp%>0 ],
FIND $[ %bfstp%=udm | %bfstp%=ud | %bfstp%=u+ | %bfstp%=pt ], EXIT
IFEX $%&iboothd%>=0, TEAM SET AllDevs=\\.\PhysicalDrive%&iboothd%| SET hd=%&iboothd%| SET hd1=%&hd%| SET DEV=\\.\PhysicalDrive%&hd%
IFEX $[ %hd%<0 & %bAllDisk%<0 ], ChekHD &hd  "%&DEV%"
FIND $%bfstp%=cd,
FIND $%bfstp%=cd, EXIT
FIND $%findbootonly%>0, EXIT
FIND $[ '%_curdrv%'<>'' & '%CheckFile1%'<>'' ],
SET &hd1=%hd%
SET &AllDevs=%&DEV%
IFEX $[ '%&boothd%'='all' | %&boothd%<0 & %bAllDisk%>0 ],
SET ainf=VAinf
SET ainfhd=%hd%
TEAM SET ainf=VAinf| SET ainfhd=%hd%
IFEX $%hd1%>=0,  TEAM SET ainf=VAinf| SET ainfhd=%hd%
FIND $%ainf%=,!! IFEX $%hd1%>=0,  TEAM SET ainf=VAinf| SET ainfhd=%hd%
SET~  VAinf=%ainf%
SET &dsks=%~3
FIND $%dsks%=, PART list disk ,&&dsks
PART -hextp -phy#  LIST  part  %&dsk%,&&prts
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
FORX * %&prts%,&&prt, TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
FORX * %dsks%,&&dsk,
MSTR &diskprts=3,0,%&diskprts%
FIND $%diskprts%=, SET diskprts=*
ENVI-ret %~1=%&diskprts%
ENVI-ret %~2=%&diskprts%
GetAllPart VAinf %ainf%  "%ainfhd%"
FIND $%&VAinf%=, GetAllPart VAinf %ainf%  "%ainfhd%"
TEAM SET~  VAinf=%ainf%| FIND $%&VAinf%=, GetAllPart VAinf %ainf%  "%ainfhd%"
FIND $%ainf%<>,!! TEAM SET~  VAinf=%ainf%| FIND $%&VAinf%=, GetAllPart VAinf %ainf%  "%ainfhd%"
SET &hd1=%hd%
SET &doudm=1
IFEX $[ %_udm_%<1 | %mhide%>0 | %mhide1%>0 ], SET &doudm=1! SET &doudm=0
---AllDevs[%&AllDevs%]
ENVI &&SZ=-1
ENVI &&OFF=-1
ENVI &&FAT=-1
SET &PART_TP=hd
SET &BEFI=0
TEAM ENVI &&SZ=-1| ENVI &&OFF=-1| ENVI &&FAT=-1| SET &PART_TP=hd| SET &BEFI=0
SET  &PART0=
SET  &PARTS=
SET  &PARTX=
SET  PARTN=0
TEAM SET  &PART0=| SET  &PARTS=| SET  &PARTX=| SET  PARTN=0
SET &_mh=%_mh%
@TEAM SET &_mh=%_mh%
SET &hd=%hd1%
SET hd1=
@TEAM SET &hd=%hd1%| SET hd1=
@FIND $%hd%=, ChekHD &&hd  "%&DEV%"
SET &IMG=%~1
SET &EFIBOOTOFF=0
SET &EFIBOOTOFF2=0
SET &EFIBOOTSZ=-1
SET &SECPARAM=%SECPARAM%
SET &CfgOK=0
SET SECPARAMB=65
SET SECPARAM0=37
SET &SECPARAM=%SECPARAMB%
GETF#  %&IMG%,%SECPARAM0%s#1s,&&DAT
SET?long   DAT=&&BootTAG:0x1B4
SET?short  DAT=&&BootOK:0x1FE
----------------------------
IFEX $[ %BootTAG%=0x5352424D & %BootOK%=0xAA55 ],
IFEX $[ ( %BootTAG%=0x46424246 | %BootTAG%=0x534C5055 ) & %BootOK%=0xAA55 ],
CALC -base=16 &&p=%SECPARAM%s + 3
GETF  %&IMG%,%p%#10,&&DAT
FIND $%DAT%=0x4D 0x42 0x52 0x4F 0x53 0x50 0x41 0x52 0x41 0x4D,  EXIT LOOP
EXIT _SUB
IFEX $%SECPARAM%=%SECPARAMB%, EXIT _SUB
LOOP #%bUD%<>3,
CALL * GetCFG \\.\PhysicalDrive%&hd%
IFEX $[ %ClearTmp%>=1 & %hd%>=0 & %&doudm%<=0 ], ClearTmpMBROS %ClearTmp% "%&hd%" -getsize
SET &ok11=1
FIND $%&bootdev%<>, IFEX $%hd%<0, EXIT -
FIND $%&bootdev%<>,
IFEX $%&ok11%<0, EXIT -
SET &MountDrv=
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive &MountDrv
TEAM SET &MountDrv=| GetFreeDrive &MountDrv
IFEX #%bpt%>0, TEAM MountHdPtImd "%hd%"  "%&udmid%"  "%&drv%" | @EXIT -
FIND $%bfstp%=pt, TEAM MountHdPt "%hd%"  "%&bootid%"  "%&MountDrv%" | EXIT -
SET &retv1=%retv%
SET retv=
TEAM SET &retv1=%retv%|  SET retv=
FIND $%udmask%=0, CALC &&udmask=4 | 8 | 16 | 32 | 1
FIND $%udimg%=, FIND $%udmask%=0, CALC &&udmask=4 | 8 | 16 | 32 | 1
FIND $%udimg%<>,  SET &udmask=0x40007D
FIND $0x00000000=%udmask%, FIND $%udimg%<>,  SET &udmask=0x40007D
SET &udmask=0xF2007D
SET &CheckFs=1
FIND $%CheckFs%=-1, SET &CheckFs=1
TEAM SET &udmask=0xF2007D| FIND $%CheckFs%=-1, SET &CheckFs=1
FIND $0x00000000=%udmask%,!! TEAM SET &udmask=0xF2007D| FIND $%CheckFs%=-1, SET &CheckFs=1
FIND $%udmask%=, FIND $%udimg%<>,  SET &udmask=0x40007D
FIND $%udmask%=,!! TEAM SET &udmask=0xF2007D| FIND $%CheckFs%=-1, SET &CheckFs=1
SET &udimg=*.img *.iso
FIND $%udimg%=, SET &udimg=*.img *.iso
IFEX $[ %_udfs%>0 & ( %hd%>=0 | %_mh%<-1 ) ], MAPUD  "%&DEV%"  "%&drv%"  &retv
SET &retv2=%retv%
SET retv=%retv1%
TEAM SET &retv2=%retv%| SET retv=%retv1%
FIND $%retv2%<>, SaveRetV "%retv2%"
SET &upoff=-1
SET &upsz=-1
TEAM SET &upoff=-1| SET &upsz=-1
ENVI^ ForceLocal=1
SET &IMG=%~1
MSTR &&hd=18,0,%~1
TEAM SET &IMG=%~1| MSTR &&hd=18,0,%~1
SET &Drv=%~2
SET &w=%~3
CALC  #w=%w%
SET &OK=0
CALC -err=-0x80000 #&hd=( %hd% ) + 0
SET &IMG=%~1
TEAM SET &IMG=%~1
ENVI-ret %~2=-1
ENVI-ret %~3=-1
ENVI-ret %~4=0
TEAM ENVI-ret %~2=-1| ENVI-ret %~3=-1| ENVI-ret %~4=0
CALC &&p=67s + 0x1B4
GETF %&FN%,%p%#4,&&S
FIND $%S%=0x55 0x50 0x4C 0x53, EXIT
TEAM CALC &&p=67s + 0x1B4| GETF %&FN%,%p%#4,&&S| FIND $%S%=0x55 0x50 0x4C 0x53, EXIT
IFEX $1=0,
GETF   %IMG%,0xC000#1,&&V
EXIT
FIND $%&V%<>0xEB, EXIT
TEAM GETF   %IMG%,0xC000#1,&&V| FIND $%&V%<>0xEB, EXIT
FindUPlus %1 &&pb &&ps &&OK
EXIT
IFEX $%ps%<=0, EXIT
MountUplus "%&DEV%"  "%&MountDrv%"  %_wm%
IFEX $%_uplus%>0,  MountUplus "%&DEV%"  "%&MountDrv%"  %_wm%
SET &Do2=1
IFEX $[ %_uplus%>0 & %udmid%<>-0x8000000 & %udmid%<0 ], SET &Do2=0! SET &Do2=1
SET &retv1=%retv%
SET retv=
TEAM SET &retv1=%retv%|  SET retv=
SET &_exe=%~5
ENVI-ret %~4=
SET &op=%~1
SET &MBROS=%~2
SET &MountDrv=%~3
SET &hd=
LSTR &&LDEV=17,%~2
ENVI &&hd=-0x8000
SET &&c1=
MSTR &&c1=18,1,%~2
FIND $\\.\PhysicalDrive=%&LDEV%, MSTR &&c1=18,1,%~2
MSTR &&c2=19,1,%~2
MSTR &&c3=20,1,%~2
FIND $%&c1%>9, TEAM SET c1=
FIND $%&c2%>9, TEAM SET c2=
FIND $%&c3%>9, TEAM SET c3=
FIND $%&c1%<0, TEAM SET c2=| SET c3=|
SET c3=
TEAM SET c3=|
FIND $%&c2%<0, TEAM SET c3=|
CALC #&hd=%c1%
FIND $%&c1%>=0, CALC #&hd=%c1%
FIND $%&c2%>=0, CALC #&hd=%&hd% * 10 + %&c2%
FIND $%&c3%>=0, CALC #&hd=%&hd% * 10 + %&c3%
ENVI-ret %~1=%&hd%
ChekHD &hd  "%&MBROS%"
SET &OFF=-1
SET &SZ=-1
FIND $%&hd%=,  EXIT
CALC #&hd=%&hd%
IFEX $%&umount%=1,
IFEX $%&hd%<0,  EXIT
IFEX $%&umount%=0,!! IFEX $%&hd%<0,  EXIT
set &v1=%&umount%
IFEX $%umount%=0x22,  set &v1=0
FIND $%&upoff%=, TEAM SET &upoff=-1| SET &upsz=-1
FIND $%&MountDrv%=, TEAM FDRV  *rsort *idle  &&Drv=*:| MSTR  &MountDrv=<1>%&Drv%
find $%v1%=0, FIND $%&MountDrv%=, TEAM FDRV  *rsort *idle  &&Drv=*:| MSTR  &MountDrv=<1>%&Drv%
FIND $%&MountDrv%=,  EXIT
IFEX $%&umount%=0, FIND $%&MountDrv%=,  EXIT
ENVI &&ShowDrv=
ENVI &&FN=\\.\PhysicalDrive%&hd%
ENVI &&SZ=-1
ENVI &&OFF=-1
ENVI &&FAT=-1
SET &PART_TP=hd
SET &BEFI=0
TEAM ENVI &&SZ=-1| ENVI &&OFF=-1| ENVI &&FAT=-1| SET &PART_TP=hd| SET &BEFI=0
PART update  %&hd%
SET &SzOnly=
IFEX $%ClearTmp%>1, SET &SzOnly=-SzOnly! SET &SzOnly=
CALC -base=16 #&&listudmflags=4 | %_uplus% | 0x200
ENVI^  ForceLocal=1
ENVI &&FN=%~1
SET &SZ=-1
SET &OFF=-1
TEAM SET &SZ=-1| SET &OFF=-1
SET &UDlist=
SET &bUDm=0
SET &bUD=0
SET &bUD1=0
SET &udfs=%~4
CALC -base=16 #&&_uplus=%udfs% & 0xFA
SET &_up=%_uplus%
CALC #&&noptimd=%udfs% & 4
CALC #&&_limit=%udfs% & 0x100
CALC #&&_vhd=%udfs% & 0x200
CALC #udfs=%udfs% & 1
SET &_udmask=%~5
SET &I6=6
SET &brGPTAtt=0
SET &SzOnly=0
FIND $%~6=-SzOnly,TEAM SET I6=7| SET &SzOnly=2! SET &SzOnly=0
MSTR &&v7=<%I6%>%*
FIND $%v7%=-GPTAtt,TEAM CALC #I6=%I6% + 1| SET brGPTAtt=1
SET I6=8
SET brGPTAtt=1
TEAM SET I6=8| SET brGPTAtt=1
FIND $%~7=-GPTAtt,TEAM SET I6=8| SET brGPTAtt=1
MSTR &&udimg=<%I6%->%*
SET _udmask=-udmask: 0xF2007D
FIND $%_udmask%=, SET _udmask=-udmask: 0xF2007D
SET udimg=*.img *.iso
FIND $%udimg%=, SET udimg=*.img *.iso
CALC  -err=-0x8000000 #&&rudmid=(%rudmid%)+0
SET &bUPh=0
SET &UPlusId=-1000
RAMD Imdisk*&&OKImd --version
SED &OKImd=0,\., ,%&OKImd%
MSTR &&hv1,&&lv1,&&OKImd=<3><4><5>%&OKImd%
CALC -base=16 #&&ImdiskVerOK=0x0%hv1% * 0x100 + 0x0%lv1%
IFEX #%ImdiskVerOK%<1, SET ImdOK=
SET &drvm=
SET &NoUD=0
SET SECPARAMB=65
SET SECPARAM0=37
SET &SECPARAM=%SECPARAMB%
GETF#  %&FN%,%SECPARAM0%s#1s,&&DAT
SET?long   DAT=&&BootTAG:0x1B4
SET?short  DAT=&&BootOK:0x1FE
----------------------------
IFEX $[ %BootTAG%=0x5352424D & %BootOK%=0xAA55 ],
SET &bUDx=0
IFEX $[ %BootTAG%=0x46424246 & %BootOK%=0xAA55 ], TEAM SET &bUDx=1| SET bUPh=-1! SET &bUDx=0
SET &bUPx=0
IFEX $[ %BootTAG%=0x534C5055 & %BootOK%=0xAA55 ], TEAM SET &bUPx=1| SET bUPh=-1! SET &bUPx=0
IFEX $[ %bUDx%=1 | %bUPx%=1 ],
GETF# %&FN%,0s#1s,&&S
SET?short S=&&v1:0
GETF %&FN%,0x194#16,&&v2
IFEX $%v1%=0x31FA, FIND $%v2%=0x20 0x66 0x72 0x6F 0x6D 0x20 0x55 0x53 0x42 0x20 0x64 0x65 0x76 0x69 0x63 0x65, TEAM SET bUPh=1|EXIT -
GETF %&FN%,0x150#16,&&v3
IFEX $%v1%=0x31FA, FIND $%v3%=0x20 0x66 0x72 0x6F 0x6D 0x20 0x55 0x53 0x42 0x20 0x64 0x65 0x76 0x69 0x63 0x65, TEAM SET bUPh=2|EXIT -
IFEX $%v1%=0x5CEB, FIND $%v2%=0x20 0x66 0x72 0x6F 0x6D 0x20 0x55 0x53 0x42 0x20 0x64 0x65 0x76 0x69 0x63 0x65, TEAM SET bUPh=3|EXIT -
GETF %&FN%,0x17A#16,&&v4
IFEX $%v1%=0x58EB, FIND $%v4%=0x20 0x66 0x72 0x6F 0x6D 0x20 0x55 0x53 0x42 0x20 0x64 0x65 0x76 0x69 0x63 0x65, TEAM SET bUPh=4|EXIT -
IFEX $%bUPh%=0,
IFEX $%NoUD%>0, EXIT LOOP
CALC -base=16 &&p=%SECPARAM%s + 3
GETF  %&FN%,%p%#10,&&DAT
FIND $%DAT%=0x4D 0x42 0x52 0x4F 0x53 0x50 0x41 0x52 0x41 0x4D,  EXIT LOOP
SET NoUD=2
EXIT LOOP
TEAM SET NoUD=2| EXIT LOOP
IFEX $%SECPARAM%=%SECPARAMB%, TEAM SET NoUD=2| EXIT LOOP
LOOP #%bUD%<>3,
SET NoUD=3
IFEX $%_udm_%>0, SET NoUD=3
SET &NoUDx=%NoUD%
IFEX $%bUD%=1, SET NoUDx=0
IFEX $%NoUD%>=2, IFEX $%bUD%=1, SET NoUDx=0
FIND $%GetHide%=, SET &GetHide=1
IFEX $%mnorhide%>0, SET &GetHide=1
IFEX $[ %GetHide%<1 & %_udfs%>0 & %bUDx%>0 & %mhide1%>0 ], SET GetHide=1
IFEX $[ %GetHide%<1 & %_up%>0 & %bUPh%>0 & %mhide1%>0 ], SET GetHide=1
IFEX $[ %_up%>0 & %bUPh%>0 & %hd%>=0 & ( %mhide1%>0 | %mhide%>0 ) ],
SET &CheckUP=%bUPh%
IFEX $[ %GetHide%<1 & %_udm_%<1 & %bUDm%>0 & %mhide1%>0 ], SET GetHide=1
SET &TPS1=核心UDM分区
SET &TPS2=UDM分区
TEAM SET &TPS1=核心UDM分区| SET &TPS2=UDM分区
SET &bNormUDUP=0
SET &EFIBOOTOFF=0
SET &EFIBOOTOFF2=0
GETF# %FN%,%SECPARAM%s#1s,&&DAT
SET?long  &DAT=&&EFIBOOTOFF:0x28
SET?long  &DAT=&&EFIBOOTSZ:0x2C
SET?long  &DAT=&&Hi:0x68
CALC -base=16 EFIBOOTOFF=%EFIBOOTOFF% + SHL(%Hi%,32)
SET?int64  &DAT=&&EFIBOOTOFF2:0x74
IFEX $%EFIBOOTOFF2%=0, SET EFIBOOTOFF2=-1
SET &&SUBOFF=0
IFEX #%InnerMode%>0, SET?int64 DAT=&&SUBOFF:0xA8
IFEX $%NoUDx%<1,
SET &OFFH=%OFF%
SET &SZH=%SZ%
SET &lpt=1
IFEX $[ %SzOnly%<=2 & %&hd%>=0 & %_nomorm%<1 & %GetHide%>0 ], SET &lpt=1! SET &lpt=0
IFEX $[ %CheckUP%>0 & %_up%>0 & %SzOnly%<=1 ],
SET VAI=0x1000
SET NMI=
SET &&drvm=
TEAM SET VAI=0x1000| SET NMI=| SET &&drvm=
----GetUDPart：lpt[%lpt%]
PART list part %&hd%,&&allps
IFEX $%j%<0, EXIT  -
SET &hd=%1
SET &j=%2
SET &V=
@TEAM SET &hd=%1| SET &j=%2| SET &V=
FIND $%&VAinf%=, TEAM PART -hextp -phy#  LIST  part  %&hd%:%&j%,&&V| ENVI-ret %~3=%&V%| EXIT _SUB
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
MSTR &V=<3->%Vi%
EXIT  FORX
TEAM MSTR &V=<3->%Vi%| EXIT  FORX
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
FORX *NL &VAinf,&&Vi,
ENVI-ret %~3=%&V%
GETPARTINF %hd%  %j%  &&V
MSTR &&id,&&TPI,&&AcGPT,&&OFI,&&SZI,&&ATT,&&i,&&drv=<1><2><3><4><5><6><8><9>%V%
IFEX $[ '%AcGPT%'<>'GPT' & %TPI%=0 ] ,  EXIT -
SET &tp=隐藏分区
LSTR &&id1=1,%id%
FIND $"%id1%"="=", TEAM SET id=0| set id1=0
FIND $[ %id1%=@ | %id1%=- | %id1%:=: ],  EXIT -
SET &tp=正常分区
IFEX $%id%<>0, SET &tp=正常分区
IFEX $%UPlusId%=%id%, SET &tp=隐藏分区
CALC #&&OFI=%OFI% / 512
CALC #&&SZI=%SZI% / 512
CALC &&SZK=%SZI% / 2
IFEX $%OFI%=%EFIBOOTOFF%,  EXIT  -
IFEX $%OFI%=%EFIBOOTOFF2%,  EXIT  -
IFEX $%OFI%=%OFF%, IFEX $%SZI%=%SZ%,  EXIT  -
ENVI %~1=%~2#%~3#%~4$
CALL *  GetWimName  &&WimName  PhysicalDrive%hd%  %OFI%   %SZI%
IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
FIND $%OKImd%=OK, IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
SET &utp=%TP_PT_NORM%
FIND $%tp%=隐藏分区, SET &utp=%TP_PT_HIDE%! SET &utp=%TP_PT_NORM%
SET  PART0=第%I%%tp% %SZK%K %NMI% %drv%%drvm%
IFEX $%PARTN%=0, SET  PART0=第%I%%tp% %SZK%K %NMI% %drv%%drvm%
SET  PARTS=%PARTS%|第%I%%tp% %SZK%K %NMI% %drv%%drvm%
FIND $%PARTX%<>, SET  PARTX=%PARTX%%NL%
SET ATT=
IFEX $[ %brGPTAtt%>0 & '%AcGPT%'='GPT' ],SET ATT=0x%ATT%!  SET ATT=
SET  PARTX=%PARTX%第%I%%tp% %OFI% %SZI% %utp% %VAI% "%NMI%" "%drv%%drvm%" %tp% %TPI% %i%  %ATT%
CALC PARTN=%PARTN% + 1
IFEX $%j%<0, EXIT  -
SET &hd=%1
SET &j=%2
SET &V=
@TEAM SET &hd=%1| SET &j=%2| SET &V=
FIND $%&VAinf%=, TEAM PART -hextp -phy#  LIST  part  %&hd%:%&j%,&&V| ENVI-ret %~3=%&V%| EXIT _SUB
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
MSTR &V=<3->%Vi%
EXIT  FORX
TEAM MSTR &V=<3->%Vi%| EXIT  FORX
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
FORX *NL &VAinf,&&Vi,
ENVI-ret %~3=%&V%
GETPARTINF %hd%  %j%  &&V
MSTR &&id,&&TPI,&&AcGPT,&&OFI,&&SZI,&&ATT,&&i,&&drv=<1><2><3><4><5><6><8><9>%V%
IFEX $[ '%AcGPT%'<>'GPT' & %TPI%=0 ] ,  EXIT -
SET &tp=隐藏分区
LSTR &&id1=1,%id%
FIND $"%id1%"="=", TEAM SET id=0| set id1=0
EXIT -
FIND $[ %id1%=@ | %id1%=- | %id1%:=: ],  EXIT -
EXIT  -
IFEX $%j%<0, EXIT  -
EXIT  -
IFEX $%j%<0, EXIT  -
IFEX $%j%<0, EXIT  -
SET &hd=%1
SET &j=%2
SET &V=
@TEAM SET &hd=%1| SET &j=%2| SET &V=
FIND $%&VAinf%=, TEAM PART -hextp -phy#  LIST  part  %&hd%:%&j%,&&V| ENVI-ret %~3=%&V%| EXIT _SUB
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
MSTR &V=<3->%Vi%
EXIT  FORX
TEAM MSTR &V=<3->%Vi%| EXIT  FORX
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
FORX *NL &VAinf,&&Vi,
ENVI-ret %~3=%&V%
GETPARTINF %hd%  %j%  &&V
MSTR &&id,&&TPI,&&AcGPT,&&OFI,&&SZI,&&ATT,&&i,&&drv=<1><2><3><4><5><6><8><9>%V%
IFEX $[ '%AcGPT%'<>'GPT' & %TPI%=0 ] ,  EXIT -
SET &tp=隐藏分区
LSTR &&id1=1,%id%
FIND $"%id1%"="=", TEAM SET id=0| set id1=0
FIND $[ %id1%=@ | %id1%=- | %id1%:=: ],  EXIT -
SET &tp=正常分区
IFEX $%id%<>0, SET &tp=正常分区
IFEX $%UPlusId%=%id%, SET &tp=隐藏分区
CALC #&&OFI=%OFI% / 512
CALC #&&SZI=%SZI% / 512
CALC &&SZK=%SZI% / 2
IFEX $%OFI%=%EFIBOOTOFF%,  EXIT  -
IFEX $%OFI%=%EFIBOOTOFF2%,  EXIT  -
IFEX $%OFI%=%OFF%, IFEX $%SZI%=%SZ%,  EXIT  -
ENVI %~1=%~2#%~3#%~4$
CALL *  GetWimName  &&WimName  PhysicalDrive%hd%  %OFI%   %SZI%
IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
FIND $%OKImd%=OK, IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
SET &utp=%TP_PT_NORM%
FIND $%tp%=隐藏分区, SET &utp=%TP_PT_HIDE%! SET &utp=%TP_PT_NORM%
IFEX $%PARTN%=0, SET  PART0=第%I%%tp% %SZK%K %NMI% %drv%%drvm%
SET  PARTS=%PARTS%|第%I%%tp% %SZK%K %NMI% %drv%%drvm%
SET  PARTX=%PARTX%%NL%
FIND $%PARTX%<>, SET  PARTX=%PARTX%%NL%
SET ATT=
IFEX $[ %brGPTAtt%>0 & '%AcGPT%'='GPT' ],SET ATT=0x%ATT%!  SET ATT=
SET  PARTX=%PARTX%第%I%%tp% %OFI% %SZI% %utp% %VAI% "%NMI%" "%drv%%drvm%" %tp% %TPI% %i%  %ATT%
CALC PARTN=%PARTN% + 1
FORX * %allps%,&&j,
IFEX $%lpt%>0,
SET OFF=%OFFH%
SET SZ=%SZH%
TEAM SET OFF=%OFFH%|SET SZ=%SZH%
IFEX $%OFF%<0, TEAM SET OFF=%OFFH%|SET SZ=%SZH%
ENVI-ret %~2=%&OFF%
ENVI-ret %~3=%&SZ%
GetUDPart "%&MBROS%"  &OFF  &SZ  "%listudmflags%" ""   "%SzOnly%"  -GPTAtt
SET &bOne=0
FIND $%mhide1%%mhide%%mall%=000, SET bOne=1
IFEX $%bOne%=1,  EXIT
IFEX $%&SZ%<1, IFEX $%bOne%=1,  EXIT
SET gUDMID=1
SET &bClrOnly=
IFEX $%ClearTmp%>1, SET &bClrOnly=1! SET &bClrOnly=
IFEX $%&SZ%>=1, IFEX $%ClearTmp%>=1, ClearTmpMBROS "%bClrOnly%" %&hd%
IFEX $%ClearTmp%>1, EXIT _SUB
IFEX $%udmid%<>-0x8000000, SET bOne=0
SET &op_=%op%
-PARTX[%PARTX%]
SET &EFILDROFF=-2
SET &BIOSBOTOFF=-2
SET &mhidex=1
--分区列表[%&PARTX%]
MSTR  &&INFI,&&OFF,&&SZ,&&TPX,&&ATTX,&&NM,&&DRV,&&TPNM,&&TPI,&&ID,&&ATT=<~1*>%&PRTI%
SET &xNmUDM=%&NM%
-----check udmid[%id%]  [%udmid%]
IFEX $[ %udmid%<>-0x8000000 & %udmid%<>%ID% ], EXIT -
FIND $%bOne%=1,  IFEX $%ID%<>1, EXIT -
SET &bUDMtp=2
IFEX $[ %TPX%=%TP_PT_HIDE% | %TPX%=%TP_PT_HIDE% ], SET bUDMtp=0
SET bUDMtp=1
IFEX $%ID%=1, SET bUDMtp=1
SET  gUDMID=1
IFEX $%bUDMtp%=1, SET  gUDMID=1! SET gUDMID=0
IFEX $[ %&SZ%<=0 | %&OFF%<=0 ], EXIT -
SET &mnt=0
SET &TPIH=0
CALC #&&TPIH= ( %TPI% ) | 0x10
FIND $%ATT%=, CALC #&&TPIH= ( %TPI% ) | 0x10! CALC -base=16 #&&TPIH= ( %ATT% ) & 0xC000000000000000
IFEX $%_udm_%<1, SET mnt=1
IFEX $%bUDMtp%=1,!!  IFEX $%_udm_%<1, SET mnt=1
IFEX $%TPX%=%TP_PT_HIDE%,!!  FIND $%mhidex%=1, SET mnt=1
IFEX $%bUDMtp%=2,!!   IFEX $%_udm_%<1, FIND $%mall%=1,  SET mnt=1
IFEX $[ %TPX%=%TP_PT_NORM% & %mnom%<>1 & %mnorhide%>0 & %TPIH%<>0 ], SET mnt=2
FIND $%mnom%=1,  SET mnt=2
IFEX $%TPX%=%TP_PT_NORM%,!!  FIND $%mnom%=1,  SET mnt=2
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%SZ%s<32K, EXIT -
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%TPX%=0xEE, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EFILDR%,  CALC -err=-2 #EFILDROFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%EFILDROFF%, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EMBED%,  CALC -err=-2 #BIOSBOTOFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%BIOSBOTOFF%, EXIT -
IFEX $%udmid%>0, IFEX $[ %bUDMtp%=1 | %bUDMtp%=2 ], SET mnt=3
EXIT  -
FIND $%mnt%=0,  EXIT  -
MSTR  &&INFI,&&OFF,&&SZ,&&TPX,&&ATTX,&&NM,&&DRV,&&TPNM,&&TPI,&&ID,&&ATT=<~1*>%&PRTI%
SET &xNmUDM=%&NM%
-----check udmid[%id%]  [%udmid%]
IFEX $[ %udmid%<>-0x8000000 & %udmid%<>%ID% ], EXIT -
FIND $%bOne%=1,  IFEX $%ID%<>1, EXIT -
SET &bUDMtp=2
IFEX $[ %TPX%=%TP_PT_HIDE% | %TPX%=%TP_PT_HIDE% ], SET bUDMtp=0
IFEX $%ID%=1, SET bUDMtp=1
SET gUDMID=0
IFEX $%bUDMtp%=1, SET  gUDMID=1! SET gUDMID=0
IFEX $[ %&SZ%<=0 | %&OFF%<=0 ], EXIT -
SET &mnt=0
SET &TPIH=0
CALC #&&TPIH= ( %TPI% ) | 0x10
FIND $%ATT%=, CALC #&&TPIH= ( %TPI% ) | 0x10! CALC -base=16 #&&TPIH= ( %ATT% ) & 0xC000000000000000
IFEX $%bUDMtp%=1,!!  IFEX $%_udm_%<1, SET mnt=1
IFEX $%TPX%=%TP_PT_HIDE%,!!  FIND $%mhidex%=1, SET mnt=1
IFEX $%_udm_%<1, FIND $%mall%=1,  SET mnt=1
IFEX $%bUDMtp%=2,!!   IFEX $%_udm_%<1, FIND $%mall%=1,  SET mnt=1
IFEX $[ %TPX%=%TP_PT_NORM% & %mnom%<>1 & %mnorhide%>0 & %TPIH%<>0 ], SET mnt=2
FIND $%mnom%=1,  SET mnt=2
IFEX $%TPX%=%TP_PT_NORM%,!!  FIND $%mnom%=1,  SET mnt=2
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%SZ%s<32K, EXIT -
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%TPX%=0xEE, EXIT -
IFEX $%TPX%=%TP_EFILDR%,  CALC -err=-2 #EFILDROFF=%OFF%
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EFILDR%,  CALC -err=-2 #EFILDROFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%EFILDROFF%, EXIT -
IFEX $%TPX%=%TP_EMBED%,  CALC -err=-2 #BIOSBOTOFF=%OFF%
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EMBED%,  CALC -err=-2 #BIOSBOTOFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%BIOSBOTOFF%, EXIT -
IFEX $%udmid%>0, IFEX $[ %bUDMtp%=1 | %bUDMtp%=2 ], SET mnt=3
EXIT  -
FIND $%mnt%=0,  EXIT  -
FORX *NL &PARTX,&&PRTI,
CALL MountMBROS    "%mountop%"   "%&DEV%"  "%&drv%"  &retv  %_exe%
IFEX $[ %Do2%>0 & %doudm%>0 ],  CALL MountMBROS    "%mountop%"   "%&DEV%"  "%&drv%"  &retv  %_exe%
SET &retv2=%retv%
SET retv=%retv1%
TEAM SET &retv2=%retv%| SET retv=%retv1%
FIND $%retv2%<>, SaveRetV "%retv2%"
FORX *NL &AllDevs,&DEV,
FORX * 1,&&LOOP1,
FIND $%&retnm%<>,  ENVI-ret %&retnm%=%&retv%
FIND $%&findbootnm%<>, ENVI-ret %&findbootnm%=%&bootcfg%
EXIT= 0
CALL * mountudm %&arg2x%
@LOGS **ON=0
@IFEX $%&bLOGS%>0, @LOGS
@IFEX $[ %&bLOGS%>0 & '%&OldLOGS%'<>'' ], @LOGS --a --rt --rt? %&OldLOGS%
@RestoLog
EXIT FILE
TEAM CALL * mountudm %&arg2x%| @RestoLog| EXIT FILE
FIND $%&va%=mount, TEAM CALL * mountudm %&arg2x%| @RestoLog| EXIT FILE
MOUN  -udm  -mall  -mhide  -u+  -udm-  \\.\PhysicalDrive%&hd%  C-
@LOGS **ON=0
SET &OldLOGS=%&__LOGS%
SET &bLOGS=0
IFEX Xmnt.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1  Xmnt.LOG
IFEX Xmnt.RT.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1 * Xmnt.RT.LOG! IFEX Xmnt.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1  Xmnt.LOG
IFEX C:\Xmnt3%~1.RT.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **nl=0 **t=1 * C:\Xmnt3%~1.RT.LOG! IFEX Xmnt.RT.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1 * Xmnt.RT.LOG! IFEX Xmnt.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1  Xmnt.LOG
ENVI^ EnviMode=1
SET$ &NL=0D  0A
SET$ &TAB=09
SET-def InnerMode=0
SET-def TP_MBR=0x01
SET-def TP_PE_ISO=0x07
SET-def TP_DATA=0x09
SET-def TP_ISO=0x0A
SET-def TP_VHD=0x0F
SET-def TP_SYSBAK=0xF0
SET-def TP_EFILDR=0xF1
SET-def TP_EMBED=0xF3
SET &TP_PT_MASK=0x20000
SET &TP_PT_NORM=0x20000
SET &TP_PT_HIDE=0x20100
SET &TP_UD_MASK=0x80000
SET &TP_UP_MASK=0x40000
SET &TP_UP_DEEP=0x40100
SET &UD_BIG=0x80
SET-def VA_SDIRMNT=0x20
SET &SZ=-1
SET &OFF=-1
SET &FAT=-1
SET &PART_TP=hd
SET &BEFI=0
TEAM SET &SZ=-1| SET &OFF=-1| SET &FAT=-1| SET &PART_TP=hd| SET &BEFI=0
SET &PART0=
SET  &PARTS=
SET  &PARTX=
SET  PARTN=0
TEAM SET &PART0=| SET  &PARTS=| SET  &PARTX=| SET  PARTN=0
SET-def SECPARAM=65
SET &FAT16Max=2096252K
SET &mhide=0
SET &mnorhide=0
SET &mall=0
SET &mhide1=0
SET &GetHide=
SET &_udm_=0
SET &mountdrvs=
SET &mnom=0
SET &OnlyOne=0
SET &OnlySoft=0
SET &ClearTmp=0
SET &umount=0
SET &rudmid=-0x8000000
SET &_nomorm=1
SET &MntTags=
SET &MntTagsA=
SET &CheckFile=
SET &CheckFileA=
SET &brem=1
CALC -base=16 #&&CLEARMBROSTAGOFF=36s + 0x19E
CALC -base=16 #&&CLEARMBROSTAGOFF1=36s + 0x1BE
CALC -base=16 #&&CLEARMBROSTAGOFF1x=36s + 0x1BE+ 5 + 6
CALC -base=16 #&&CLEARMBROSTAGLEN=0x60
CALC -base=16 #&&CLEARMBROSTAGOFF2=36s + 0x1CE
SET-def  CLEARMBROSTAG0=0x43 0x4C 0x45 0x41 0x52 0x4D 0x42 0x52 0x4F
SET-def CLEARMBROSTAGp1=0x73
SET-def CLEARMBROSTAGp3=0x70
SET &VAinf=
SET &va=%~1
MSTR &&arg2x=<2->%*
SET &_mw=0
SET &bfstp=
SET &findLevel=-1
SET &CheckFs=-1
FIND $%&va%=ClearTmpMBROSAll, TEAM ClearTmpMBROSAll| @RestoLog| EXIT FILE
FIND $%&va%=moun, SET &va=mount
SET &_nomorm=1
SET &retnm=
SET &retv=
SET &mountdrvs=CDEFGHIJKLMNOPQRSTUVZBAWYX
SET &_exe=
SET &mountop=-o ro
SET &BWin=0
SET &umount=0
SET &udmid=-0x8000000
SET &udid=-0x8000000
SET &_uplus=0
SET &_w=0
SET &_udfs=0
SET &_udm_=0
SET &udimg=
SET &udmask=0x00000000
SET &_rawudmask=0
SET &_udmask=
SET &_mh=-0x8000
SET &_opt=
SET &_nbrd=
SET &_curdrv=
SET &_nbrd=--nbrd
SET _exe=-nexe
@TEAM SET &_nbrd=--nbrd| SET _exe=-nexe
SET &ainf=
SET &_dbg=
SET &_mw=0
SET &_fro=0
SET &CheckFile1=
SET &_findboot=
SET &findbootonly=0
SET &findbootnm=
SET &bootcfg=-1
SET  &devtp=
SET &bootdev=
SET &bootid=-1
SET &bfstp=
SET &boothd=-1
SET &hvudmdev=0
TEAM SET  &devtp=| SET &bootdev=| SET &bootid=-1| SET &bfstp=| SET &boothd=-1| SET &hvudmdev=0
SET &I=1
SET &findLevel=-1
SET &EFIBOOTOFF=
SET &EFIBOOTOFF2=
SET &bpt=0
SET &_safe=0
SET &brem=1
ENVI^ ForceLocal=1
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
FIND $-m=%va%,   @TEAM SET BWin=m| @EXIT -
FIND $-w=%va%,   @TEAM SET mountop=| SET _w=1| @EXIT -
FIND $-rem-=%va%,   @TEAM SET brem=0| @EXIT -
FIND $-u=%va%,   @TEAM SET umount=1| @EXIT
FIND $-ud=%va%,   @TEAM SET umount=1| @EXIT -
FIND $-uh=%va%,   @TEAM SET umount=2| @EXIT -
FIND $-muh=%va%,   @TEAM SET umount=0x22| @EXIT -
FIND $-muhg=%va%,   @TEAM SET umount=0x62| @EXIT
FIND $-mnorhide=%va%,  @TEAM SET mnorhide=0x10| @EXIT -
FIND $-fro=%va%,  @TEAM SET _fro=0x20| @EXIT -
FIND $-mhide=%va%,  @TEAM SET mhide=1| @EXIT -
FIND $-mhide-=%va%,  @TEAM SET mhide=0| @EXIT -
FIND $-mhide1=%va%,  @TEAM SET mhide1=1| @EXIT -
SET mall=1
@EXIT -
@TEAM SET mall=1| @EXIT -
FIND $-mall=%va%,   @TEAM SET mall=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
FIND $-m=%va%,   @TEAM SET BWin=m| @EXIT -
FIND $-w=%va%,   @TEAM SET mountop=| SET _w=1| @EXIT -
FIND $-rem-=%va%,   @TEAM SET brem=0| @EXIT -
FIND $-u=%va%,   @TEAM SET umount=1| @EXIT
FIND $-ud=%va%,   @TEAM SET umount=1| @EXIT -
FIND $-uh=%va%,   @TEAM SET umount=2| @EXIT -
FIND $-muh=%va%,   @TEAM SET umount=0x22| @EXIT -
FIND $-muhg=%va%,   @TEAM SET umount=0x62| @EXIT
FIND $-mnorhide=%va%,  @TEAM SET mnorhide=0x10| @EXIT -
FIND $-fro=%va%,  @TEAM SET _fro=0x20| @EXIT -
SET mhide=1
@EXIT -
@TEAM SET mhide=1| @EXIT -
FIND $-mhide=%va%,  @TEAM SET mhide=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
FIND $-m=%va%,   @TEAM SET BWin=m| @EXIT -
FIND $-w=%va%,   @TEAM SET mountop=| SET _w=1| @EXIT -
FIND $-rem-=%va%,   @TEAM SET brem=0| @EXIT -
FIND $-u=%va%,   @TEAM SET umount=1| @EXIT
FIND $-ud=%va%,   @TEAM SET umount=1| @EXIT -
FIND $-uh=%va%,   @TEAM SET umount=2| @EXIT -
FIND $-muh=%va%,   @TEAM SET umount=0x22| @EXIT -
FIND $-muhg=%va%,   @TEAM SET umount=0x62| @EXIT
FIND $-mnorhide=%va%,  @TEAM SET mnorhide=0x10| @EXIT -
FIND $-fro=%va%,  @TEAM SET _fro=0x20| @EXIT -
FIND $-mhide=%va%,  @TEAM SET mhide=1| @EXIT -
FIND $-mhide-=%va%,  @TEAM SET mhide=0| @EXIT -
FIND $-mhide1=%va%,  @TEAM SET mhide1=1| @EXIT -
FIND $-mall=%va%,   @TEAM SET mall=1| @EXIT -
FIND $-mnom=%va%,   @TEAM SET mnom=1| SET _nomorm=0| @EXIT -
FIND $-mnom-=%va%,  @TEAM SET _nomorm=1| @EXIT -
FIND $-mw=%va%,   @TEAM SET _mw=0x100| @EXIT -
FIND $-mw-=%va%,   @TEAM SET _mw=0x200| @EXIT -
FIND $-onlys=%va%,   @TEAM SET OnlySoft=1| @EXIT -
FIND $-Cleartmp=%va%,   @TEAM CALC #ClearTmp=%ClearTmp% || 1| @EXIT -
FIND $-CleartmpOnly=%va%,   @TEAM SET ClearTmp=2| @EXIT -
FIND $[ -ret:=%va% | -ret=%va% ], @TEAM SET retnm=%V2%| @EXIT -
FIND $-udmid:=%va%, @TEAM SET udmid=%V2%| MSTR &&v2p=1,3,%udmid%| FIND $%v2p%=pt#, MSTR udmid=4,0,%udmid%| FIND $%v2p%=pt#, SET bpt=1| @EXIT -
FIND $-safe=%va%,  @TEAM SET _safe=3| @EXIT -
FIND $-safe-=%va%,  @TEAM SET _safe=0| @EXIT -
FIND $-udid:=%va%,  @TEAM SET udid=%V2%| @EXIT -
FIND $-udimg:=%va%,  @TEAM SET udimg_=%V2q%| SET udimg=%udimg% %udimg_%| @EXIT -
FIND $-udmask:=%va%, @TEAM SET udmask=%V2%| SET _udmask=-udmask: %udmask%| @EXIT -
FIND $-rawudmask=%va%,   @TEAM SET _rawudmask=1| @EXIT -
FIND $-opt:=%va%,  @TEAM SET _opt=%_opt% %V2q%| @EXIT -
FIND $-opts:=%va%, @TEAM SET _opt=%_opt% %V2q%| @EXIT -
FIND $-mh:=%va%, @TEAM SET _mh=%V2%| @EXIT -
SET _uplus=1
@EXIT -
@TEAM SET _uplus=1| @EXIT -
FIND $-u+=%va%,   @TEAM SET _uplus=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
SET _udm_=1
@EXIT -
@TEAM SET _udm_=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
EXIT LOOP
FIND $%c1%<>-, EXIT LOOP
LOOP #1=1,
SET _nomorm=0
IFEX $[ %mhide%>0 | %mhide1%>0 | %mnom%>0 ], SET _nomorm=0
MSTR MntTags=3,0,%MntTags%
MSTR MntTagsA=3,0,%MntTagsA%
MSTR CheckFile=3,0,%CheckFile%
MSTR CheckFileA=3,0,%CheckFileA%
SET &_mw0=%_mw%
CALC -base=16 #&&_wm=%_w% | %_mw0%
MSTR &&DEV=<~%I%>%*
CALC &I=%I% + 1
MSTR &&drv=<~%I%>%*
IFEX  $[ %umount%=1 & '%&DEV%'='' & '%drv%'<>'' ], TEAM RAMD Imdisk*&retv  -D -m  %drv%| EXIT
SET &AutoUDmMount.Drv=
SET &AutoUDmMount.bOld=
SET &AutoUDmMount.hd=-1
SET &AutoUDmMount.UdmId=-1
@TEAM SET &AutoUDmMount.Drv=| SET &AutoUDmMount.bOld=| SET &AutoUDmMount.hd=-1| SET &AutoUDmMount.UdmId=-1
IFEX $%&__UDM.sysinit%=1,
--DBG:_findboot[%_findboot%]==========_findboot
SET &vbootid=-1
FIND $%_findboot%=1,
CALC -err=-1 #boothd=(%boothd%) + 0
FIND $[ '%devtp%'<>'cd' ], CALC -err=-1 #boothd=(%boothd%) + 0
CALC -err=-1 #&&iboothd=( %boothd% ) + 0
SET &bAllDisk=0
FIND $[ %&DEV%=\\.\PhysicalDrive* ], SET &bAllDisk=1
FIND $[ %&DEV%=* ], SET &bAllDisk=2
IFEX $%bAllDisk%>0,  PART LIST DISK  ,&&dsks
IFEX $[ %bAllDisk%>0 & %hvudmdev%>0 & '%devtp%'<>'cd' ],
SET &mountop0=%mountop%
MSTR -delims:|   &vbootid=<1>%bootid%
SED &_wf=0,[^WwRr],,%vbootid%
SED vbootid=0,[WwRr],,%vbootid%
FIND $%_wf%=w, @TEAM SET &mountop=| SET _w=1| CALC -base=16 #&&_wm=%_w% || %_mw0%
CALC -err=-1 #vbootid1=(%vbootid%) + 0
MSTR &&c1=1,1,%drv%
MSTR &&c2=2,1,%drv%
SET  &c2x=%c2%
FIND $%c2%=:, TEAM SET c2=| SET OnlyOne=1
FIND $%c2%=,  SET mountdrvs=%c1%
FIND $%c1%<>, FIND $%c2%=,  SET mountdrvs=%c1%
FIND $%c2%<>-,   SET mountdrvs=%drv%
FIND $%c2%<>,  FIND $%c2%<>-,   SET mountdrvs=%drv%
SET drv=%c1%:
FIND $%c1%<>, SET drv=%c1%:
SET mountdrvs=
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
FORX * A B C D E F G H I J K L M N O P Q R S T U V W Y Z,&&d, FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
FIND $%c2%=-,
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive drv
FIND $%c2x%=:,!   GetFreeDrive drv
CALL ParseDrviList
SET &MountDrv=
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive &MountDrv
TEAM SET &MountDrv=| GetFreeDrive &MountDrv
SET &Ix=1
FIND $[ %bfstp%=udm ],
FIND $%bfstp%=ud,
FIND $%bfstp%=u+,
FIND $%bfstp%=pt,
FIND $%bfstp%=udm, IFEX $[ %boothd%>=0 & %vbootid%>0 ], TEAM SET mall=0| SET mhide=0
FIND $%_mh%=efi, SET _mh=-1
FIND $%_mh%=auto, SET _mh=0
CALC -err=-0x8000 #_mh=(%_mh%) + 0
--udmid[%udmid%]
CALC #&&GetHide=%mhide% | %mnorhide%
SET &ainfhd=
IFEX $%bAllDisk%>0,  PART LIST DISK  ,&&dsks
IFEX $%bAllDisk%>0, TEAM MSTR &&hd=<1>%dsks%| SET DEV=\\.\PhysicalDrive%&hd%
IFEX $[ '%&boothd%'<>'all' & %&boothd%>=0 & %bAllDisk%>0 & %ClearTmp%>0 ],
FIND $[ %bfstp%=udm | %bfstp%=ud | %bfstp%=u+ | %bfstp%=pt ], EXIT
IFEX $%&iboothd%>=0, TEAM SET AllDevs=\\.\PhysicalDrive%&iboothd%| SET hd=%&iboothd%| SET hd1=%&hd%| SET DEV=\\.\PhysicalDrive%&hd%
IFEX $[ %hd%<0 & %bAllDisk%<0 ], ChekHD &hd  "%&DEV%"
FIND $%bfstp%=cd,
FIND $%bfstp%=cd, EXIT
FIND $%findbootonly%>0, EXIT
FIND $[ '%_curdrv%'<>'' & '%CheckFile1%'<>'' ],
SET &hd1=%hd%
SET &AllDevs=%&DEV%
IFEX $[ '%&boothd%'='all' | %&boothd%<0 & %bAllDisk%>0 ],
SET ainf=VAinf
SET ainfhd=%hd%
TEAM SET ainf=VAinf| SET ainfhd=%hd%
IFEX $%hd1%>=0,  TEAM SET ainf=VAinf| SET ainfhd=%hd%
FIND $%ainf%=,!! IFEX $%hd1%>=0,  TEAM SET ainf=VAinf| SET ainfhd=%hd%
SET~  VAinf=%ainf%
SET &dsks=%~3
FIND $%dsks%=, PART list disk ,&&dsks
PART -hextp -phy#  LIST  part  %&dsk%,&&prts
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
FORX * %&prts%,&&prt, TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
FORX * %dsks%,&&dsk,
MSTR &diskprts=3,0,%&diskprts%
FIND $%diskprts%=, SET diskprts=*
ENVI-ret %~1=%&diskprts%
ENVI-ret %~2=%&diskprts%
GetAllPart VAinf %ainf%  "%ainfhd%"
FIND $%&VAinf%=, GetAllPart VAinf %ainf%  "%ainfhd%"
TEAM SET~  VAinf=%ainf%| FIND $%&VAinf%=, GetAllPart VAinf %ainf%  "%ainfhd%"
FIND $%ainf%<>,!! TEAM SET~  VAinf=%ainf%| FIND $%&VAinf%=, GetAllPart VAinf %ainf%  "%ainfhd%"
SET &hd1=%hd%
SET &doudm=1
IFEX $[ %_udm_%<1 | %mhide%>0 | %mhide1%>0 ], SET &doudm=1! SET &doudm=0
---AllDevs[%&AllDevs%]
ENVI &&SZ=-1
ENVI &&OFF=-1
ENVI &&FAT=-1
SET &PART_TP=hd
SET &BEFI=0
TEAM ENVI &&SZ=-1| ENVI &&OFF=-1| ENVI &&FAT=-1| SET &PART_TP=hd| SET &BEFI=0
SET  &PART0=
SET  &PARTS=
SET  &PARTX=
SET  PARTN=0
TEAM SET  &PART0=| SET  &PARTS=| SET  &PARTX=| SET  PARTN=0
SET &_mh=%_mh%
@TEAM SET &_mh=%_mh%
SET &hd=%hd1%
SET hd1=
@TEAM SET &hd=%hd1%| SET hd1=
@FIND $%hd%=, ChekHD &&hd  "%&DEV%"
SET &IMG=%~1
SET &EFIBOOTOFF=0
SET &EFIBOOTOFF2=0
SET &EFIBOOTSZ=-1
SET &SECPARAM=%SECPARAM%
SET &CfgOK=0
SET SECPARAMB=65
SET SECPARAM0=37
SET &SECPARAM=%SECPARAMB%
GETF#  %&IMG%,%SECPARAM0%s#1s,&&DAT
SET?long   DAT=&&BootTAG:0x1B4
SET?short  DAT=&&BootOK:0x1FE
----------------------------
IFEX $[ %BootTAG%=0x5352424D & %BootOK%=0xAA55 ],
IFEX $[ ( %BootTAG%=0x46424246 | %BootTAG%=0x534C5055 ) & %BootOK%=0xAA55 ],
CALC -base=16 &&p=%SECPARAM%s + 3
GETF  %&IMG%,%p%#10,&&DAT
FIND $%DAT%=0x4D 0x42 0x52 0x4F 0x53 0x50 0x41 0x52 0x41 0x4D,  EXIT LOOP
EXIT _SUB
IFEX $%SECPARAM%=%SECPARAMB%, EXIT _SUB
LOOP #%bUD%<>3,
CALL * GetCFG \\.\PhysicalDrive%&hd%
IFEX $[ %ClearTmp%>=1 & %hd%>=0 & %&doudm%<=0 ], ClearTmpMBROS %ClearTmp% "%&hd%" -getsize
SET &ok11=1
FIND $%&bootdev%<>, IFEX $%hd%<0, EXIT -
FIND $%&bootdev%<>,
IFEX $%&ok11%<0, EXIT -
SET &MountDrv=
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive &MountDrv
TEAM SET &MountDrv=| GetFreeDrive &MountDrv
IFEX #%bpt%>0, TEAM MountHdPtImd "%hd%"  "%&udmid%"  "%&drv%" | @EXIT -
FIND $%bfstp%=pt, TEAM MountHdPt "%hd%"  "%&bootid%"  "%&MountDrv%" | EXIT -
SET &retv1=%retv%
SET retv=
TEAM SET &retv1=%retv%|  SET retv=
FIND $%udmask%=0, CALC &&udmask=4 | 8 | 16 | 32 | 1
FIND $%udimg%=, FIND $%udmask%=0, CALC &&udmask=4 | 8 | 16 | 32 | 1
FIND $%udimg%<>,  SET &udmask=0x40007D
FIND $0x00000000=%udmask%, FIND $%udimg%<>,  SET &udmask=0x40007D
SET &udmask=0xF2007D
SET &CheckFs=1
FIND $%CheckFs%=-1, SET &CheckFs=1
TEAM SET &udmask=0xF2007D| FIND $%CheckFs%=-1, SET &CheckFs=1
FIND $0x00000000=%udmask%,!! TEAM SET &udmask=0xF2007D| FIND $%CheckFs%=-1, SET &CheckFs=1
FIND $%udmask%=, FIND $%udimg%<>,  SET &udmask=0x40007D
FIND $%udmask%=,!! TEAM SET &udmask=0xF2007D| FIND $%CheckFs%=-1, SET &CheckFs=1
SET &udimg=*.img *.iso
FIND $%udimg%=, SET &udimg=*.img *.iso
IFEX $[ %_udfs%>0 & ( %hd%>=0 | %_mh%<-1 ) ], MAPUD  "%&DEV%"  "%&drv%"  &retv
SET &retv2=%retv%
SET retv=%retv1%
TEAM SET &retv2=%retv%| SET retv=%retv1%
FIND $%retv2%<>, SaveRetV "%retv2%"
SET &upoff=-1
SET &upsz=-1
TEAM SET &upoff=-1| SET &upsz=-1
ENVI^ ForceLocal=1
SET &IMG=%~1
MSTR &&hd=18,0,%~1
TEAM SET &IMG=%~1| MSTR &&hd=18,0,%~1
SET &Drv=%~2
SET &w=%~3
CALC  #w=%w%
SET &OK=0
CALC -err=-0x80000 #&hd=( %hd% ) + 0
SET &IMG=%~1
TEAM SET &IMG=%~1
ENVI-ret %~2=-1
ENVI-ret %~3=-1
ENVI-ret %~4=0
TEAM ENVI-ret %~2=-1| ENVI-ret %~3=-1| ENVI-ret %~4=0
CALC &&p=67s + 0x1B4
GETF %&FN%,%p%#4,&&S
FIND $%S%=0x55 0x50 0x4C 0x53, EXIT
TEAM CALC &&p=67s + 0x1B4| GETF %&FN%,%p%#4,&&S| FIND $%S%=0x55 0x50 0x4C 0x53, EXIT
IFEX $1=0,
GETF   %IMG%,0xC000#1,&&V
EXIT
FIND $%&V%<>0xEB, EXIT
TEAM GETF   %IMG%,0xC000#1,&&V| FIND $%&V%<>0xEB, EXIT
FindUPlus %1 &&pb &&ps &&OK
EXIT
IFEX $%ps%<=0, EXIT
MountUplus "%&DEV%"  "%&MountDrv%"  %_wm%
IFEX $%_uplus%>0,  MountUplus "%&DEV%"  "%&MountDrv%"  %_wm%
SET &Do2=1
IFEX $[ %_uplus%>0 & %udmid%<>-0x8000000 & %udmid%<0 ], SET &Do2=0! SET &Do2=1
SET &retv1=%retv%
SET retv=
TEAM SET &retv1=%retv%|  SET retv=
SET &_exe=%~5
ENVI-ret %~4=
SET &op=%~1
SET &MBROS=%~2
SET &MountDrv=%~3
SET &hd=
LSTR &&LDEV=17,%~2
ENVI &&hd=-0x8000
SET &&c1=
MSTR &&c1=18,1,%~2
FIND $\\.\PhysicalDrive=%&LDEV%, MSTR &&c1=18,1,%~2
MSTR &&c2=19,1,%~2
MSTR &&c3=20,1,%~2
FIND $%&c1%>9, TEAM SET c1=
FIND $%&c2%>9, TEAM SET c2=
FIND $%&c3%>9, TEAM SET c3=
FIND $%&c1%<0, TEAM SET c2=| SET c3=|
SET c3=
TEAM SET c3=|
FIND $%&c2%<0, TEAM SET c3=|
CALC #&hd=%c1%
FIND $%&c1%>=0, CALC #&hd=%c1%
FIND $%&c2%>=0, CALC #&hd=%&hd% * 10 + %&c2%
FIND $%&c3%>=0, CALC #&hd=%&hd% * 10 + %&c3%
ENVI-ret %~1=%&hd%
ChekHD &hd  "%&MBROS%"
SET &OFF=-1
SET &SZ=-1
FIND $%&hd%=,  EXIT
CALC #&hd=%&hd%
IFEX $%&umount%=1,
IFEX $%&hd%<0,  EXIT
IFEX $%&umount%=0,!! IFEX $%&hd%<0,  EXIT
set &v1=%&umount%
IFEX $%umount%=0x22,  set &v1=0
FIND $%&upoff%=, TEAM SET &upoff=-1| SET &upsz=-1
FIND $%&MountDrv%=, TEAM FDRV  *rsort *idle  &&Drv=*:| MSTR  &MountDrv=<1>%&Drv%
find $%v1%=0, FIND $%&MountDrv%=, TEAM FDRV  *rsort *idle  &&Drv=*:| MSTR  &MountDrv=<1>%&Drv%
FIND $%&MountDrv%=,  EXIT
IFEX $%&umount%=0, FIND $%&MountDrv%=,  EXIT
ENVI &&ShowDrv=
ENVI &&FN=\\.\PhysicalDrive%&hd%
ENVI &&SZ=-1
ENVI &&OFF=-1
ENVI &&FAT=-1
SET &PART_TP=hd
SET &BEFI=0
TEAM ENVI &&SZ=-1| ENVI &&OFF=-1| ENVI &&FAT=-1| SET &PART_TP=hd| SET &BEFI=0
PART update  %&hd%
SET &SzOnly=
IFEX $%ClearTmp%>1, SET &SzOnly=-SzOnly! SET &SzOnly=
CALC -base=16 #&&listudmflags=4 | %_uplus% | 0x200
ENVI^  ForceLocal=1
ENVI &&FN=%~1
SET &SZ=-1
SET &OFF=-1
TEAM SET &SZ=-1| SET &OFF=-1
SET &UDlist=
SET &bUDm=0
SET &bUD=0
SET &bUD1=0
SET &udfs=%~4
CALC -base=16 #&&_uplus=%udfs% & 0xFA
SET &_up=%_uplus%
CALC #&&noptimd=%udfs% & 4
CALC #&&_limit=%udfs% & 0x100
CALC #&&_vhd=%udfs% & 0x200
CALC #udfs=%udfs% & 1
SET &_udmask=%~5
SET &I6=6
SET &brGPTAtt=0
SET &SzOnly=0
FIND $%~6=-SzOnly,TEAM SET I6=7| SET &SzOnly=2! SET &SzOnly=0
MSTR &&v7=<%I6%>%*
FIND $%v7%=-GPTAtt,TEAM CALC #I6=%I6% + 1| SET brGPTAtt=1
SET I6=8
SET brGPTAtt=1
TEAM SET I6=8| SET brGPTAtt=1
FIND $%~7=-GPTAtt,TEAM SET I6=8| SET brGPTAtt=1
MSTR &&udimg=<%I6%->%*
SET _udmask=-udmask: 0xF2007D
FIND $%_udmask%=, SET _udmask=-udmask: 0xF2007D
SET udimg=*.img *.iso
FIND $%udimg%=, SET udimg=*.img *.iso
CALC  -err=-0x8000000 #&&rudmid=(%rudmid%)+0
SET &bUPh=0
SET &UPlusId=-1000
RAMD Imdisk*&&OKImd --version
SED &OKImd=0,\., ,%&OKImd%
MSTR &&hv1,&&lv1,&&OKImd=<3><4><5>%&OKImd%
CALC -base=16 #&&ImdiskVerOK=0x0%hv1% * 0x100 + 0x0%lv1%
IFEX #%ImdiskVerOK%<1, SET ImdOK=
SET &drvm=
SET &NoUD=0
SET SECPARAMB=65
SET SECPARAM0=37
SET &SECPARAM=%SECPARAMB%
GETF#  %&FN%,%SECPARAM0%s#1s,&&DAT
SET?long   DAT=&&BootTAG:0x1B4
SET?short  DAT=&&BootOK:0x1FE
----------------------------
IFEX $[ %BootTAG%=0x5352424D & %BootOK%=0xAA55 ],
SET &bUDx=0
IFEX $[ %BootTAG%=0x46424246 & %BootOK%=0xAA55 ], TEAM SET &bUDx=1| SET bUPh=-1! SET &bUDx=0
SET &bUPx=0
IFEX $[ %BootTAG%=0x534C5055 & %BootOK%=0xAA55 ], TEAM SET &bUPx=1| SET bUPh=-1! SET &bUPx=0
IFEX $[ %bUDx%=1 | %bUPx%=1 ],
GETF# %&FN%,0s#1s,&&S
SET?short S=&&v1:0
GETF %&FN%,0x194#16,&&v2
IFEX $%v1%=0x31FA, FIND $%v2%=0x20 0x66 0x72 0x6F 0x6D 0x20 0x55 0x53 0x42 0x20 0x64 0x65 0x76 0x69 0x63 0x65, TEAM SET bUPh=1|EXIT -
GETF %&FN%,0x150#16,&&v3
IFEX $%v1%=0x31FA, FIND $%v3%=0x20 0x66 0x72 0x6F 0x6D 0x20 0x55 0x53 0x42 0x20 0x64 0x65 0x76 0x69 0x63 0x65, TEAM SET bUPh=2|EXIT -
IFEX $%v1%=0x5CEB, FIND $%v2%=0x20 0x66 0x72 0x6F 0x6D 0x20 0x55 0x53 0x42 0x20 0x64 0x65 0x76 0x69 0x63 0x65, TEAM SET bUPh=3|EXIT -
GETF %&FN%,0x17A#16,&&v4
IFEX $%v1%=0x58EB, FIND $%v4%=0x20 0x66 0x72 0x6F 0x6D 0x20 0x55 0x53 0x42 0x20 0x64 0x65 0x76 0x69 0x63 0x65, TEAM SET bUPh=4|EXIT -
IFEX $%bUPh%=0,
IFEX $%NoUD%>0, EXIT LOOP
CALC -base=16 &&p=%SECPARAM%s + 3
GETF  %&FN%,%p%#10,&&DAT
FIND $%DAT%=0x4D 0x42 0x52 0x4F 0x53 0x50 0x41 0x52 0x41 0x4D,  EXIT LOOP
SET NoUD=2
EXIT LOOP
TEAM SET NoUD=2| EXIT LOOP
IFEX $%SECPARAM%=%SECPARAMB%, TEAM SET NoUD=2| EXIT LOOP
LOOP #%bUD%<>3,
SET NoUD=3
IFEX $%_udm_%>0, SET NoUD=3
SET &NoUDx=%NoUD%
IFEX $%bUD%=1, SET NoUDx=0
IFEX $%NoUD%>=2, IFEX $%bUD%=1, SET NoUDx=0
FIND $%GetHide%=, SET &GetHide=1
IFEX $%mnorhide%>0, SET &GetHide=1
IFEX $[ %GetHide%<1 & %_udfs%>0 & %bUDx%>0 & %mhide1%>0 ], SET GetHide=1
IFEX $[ %GetHide%<1 & %_up%>0 & %bUPh%>0 & %mhide1%>0 ], SET GetHide=1
IFEX $[ %_up%>0 & %bUPh%>0 & %hd%>=0 & ( %mhide1%>0 | %mhide%>0 ) ],
SET &CheckUP=%bUPh%
IFEX $[ %GetHide%<1 & %_udm_%<1 & %bUDm%>0 & %mhide1%>0 ], SET GetHide=1
SET &TPS1=核心UDM分区
SET &TPS2=UDM分区
TEAM SET &TPS1=核心UDM分区| SET &TPS2=UDM分区
SET &bNormUDUP=0
SET &EFIBOOTOFF=0
SET &EFIBOOTOFF2=0
GETF# %FN%,%SECPARAM%s#1s,&&DAT
SET?long  &DAT=&&EFIBOOTOFF:0x28
SET?long  &DAT=&&EFIBOOTSZ:0x2C
SET?long  &DAT=&&Hi:0x68
CALC -base=16 EFIBOOTOFF=%EFIBOOTOFF% + SHL(%Hi%,32)
SET?int64  &DAT=&&EFIBOOTOFF2:0x74
SET EFIBOOTOFF2=-1
IFEX $%EFIBOOTOFF2%=0, SET EFIBOOTOFF2=-1
SET &&SUBOFF=0
IFEX #%InnerMode%>0, SET?int64 DAT=&&SUBOFF:0xA8
IFEX $%NoUDx%<1,
SET &OFFH=%OFF%
SET &SZH=%SZ%
SET &lpt=1
IFEX $[ %SzOnly%<=2 & %&hd%>=0 & %_nomorm%<1 & %GetHide%>0 ], SET &lpt=1! SET &lpt=0
IFEX $[ %CheckUP%>0 & %_up%>0 & %SzOnly%<=1 ],
SET VAI=0x1000
SET NMI=
SET &&drvm=
TEAM SET VAI=0x1000| SET NMI=| SET &&drvm=
----GetUDPart：lpt[%lpt%]
PART list part %&hd%,&&allps
IFEX $%j%<0, EXIT  -
SET &hd=%1
SET &j=%2
SET &V=
@TEAM SET &hd=%1| SET &j=%2| SET &V=
FIND $%&VAinf%=, TEAM PART -hextp -phy#  LIST  part  %&hd%:%&j%,&&V| ENVI-ret %~3=%&V%| EXIT _SUB
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
MSTR &V=<3->%Vi%
EXIT  FORX
TEAM MSTR &V=<3->%Vi%| EXIT  FORX
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
FORX *NL &VAinf,&&Vi,
ENVI-ret %~3=%&V%
GETPARTINF %hd%  %j%  &&V
MSTR &&id,&&TPI,&&AcGPT,&&OFI,&&SZI,&&ATT,&&i,&&drv=<1><2><3><4><5><6><8><9>%V%
IFEX $[ '%AcGPT%'<>'GPT' & %TPI%=0 ] ,  EXIT -
SET &tp=隐藏分区
LSTR &&id1=1,%id%
FIND $"%id1%"="=", TEAM SET id=0| set id1=0
FIND $[ %id1%=@ | %id1%=- | %id1%:=: ],  EXIT -
SET &tp=正常分区
IFEX $%id%<>0, SET &tp=正常分区
IFEX $%UPlusId%=%id%, SET &tp=隐藏分区
CALC #&&OFI=%OFI% / 512
CALC #&&SZI=%SZI% / 512
CALC &&SZK=%SZI% / 2
IFEX $%OFI%=%EFIBOOTOFF%,  EXIT  -
IFEX $%OFI%=%EFIBOOTOFF2%,  EXIT  -
IFEX $%OFI%=%OFF%, IFEX $%SZI%=%SZ%,  EXIT  -
ENVI %~1=%~2#%~3#%~4$
CALL *  GetWimName  &&WimName  PhysicalDrive%hd%  %OFI%   %SZI%
IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
FIND $%OKImd%=OK, IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
SET &utp=%TP_PT_NORM%
FIND $%tp%=隐藏分区, SET &utp=%TP_PT_HIDE%! SET &utp=%TP_PT_NORM%
SET  PART0=第%I%%tp% %SZK%K %NMI% %drv%%drvm%
IFEX $%PARTN%=0, SET  PART0=第%I%%tp% %SZK%K %NMI% %drv%%drvm%
SET  PARTS=%PARTS%|第%I%%tp% %SZK%K %NMI% %drv%%drvm%
FIND $%PARTX%<>, SET  PARTX=%PARTX%%NL%
SET ATT=
IFEX $[ %brGPTAtt%>0 & '%AcGPT%'='GPT' ],SET ATT=0x%ATT%!  SET ATT=
SET  PARTX=%PARTX%第%I%%tp% %OFI% %SZI% %utp% %VAI% "%NMI%" "%drv%%drvm%" %tp% %TPI% %i%  %ATT%
CALC PARTN=%PARTN% + 1
EXIT  -
IFEX $%j%<0, EXIT  -
EXIT  -
IFEX $%j%<0, EXIT  -
EXIT  -
IFEX $%j%<0, EXIT  -
FORX * %allps%,&&j,
IFEX $%lpt%>0,
SET OFF=%OFFH%
SET SZ=%SZH%
TEAM SET OFF=%OFFH%|SET SZ=%SZH%
IFEX $%OFF%<0, TEAM SET OFF=%OFFH%|SET SZ=%SZH%
ENVI-ret %~2=%&OFF%
ENVI-ret %~3=%&SZ%
GetUDPart "%&MBROS%"  &OFF  &SZ  "%listudmflags%" ""   "%SzOnly%"  -GPTAtt
SET &bOne=0
FIND $%mhide1%%mhide%%mall%=000, SET bOne=1
IFEX $%bOne%=1,  EXIT
IFEX $%&SZ%<1, IFEX $%bOne%=1,  EXIT
SET gUDMID=1
SET &bClrOnly=
IFEX $%ClearTmp%>1, SET &bClrOnly=1! SET &bClrOnly=
IFEX $%&SZ%>=1, IFEX $%ClearTmp%>=1, ClearTmpMBROS "%bClrOnly%" %&hd%
IFEX $%ClearTmp%>1, EXIT _SUB
IFEX $%udmid%<>-0x8000000, SET bOne=0
SET &op_=%op%
-PARTX[%PARTX%]
SET &EFILDROFF=-2
SET &BIOSBOTOFF=-2
SET &mhidex=1
--分区列表[%&PARTX%]
MSTR  &&INFI,&&OFF,&&SZ,&&TPX,&&ATTX,&&NM,&&DRV,&&TPNM,&&TPI,&&ID,&&ATT=<~1*>%&PRTI%
SET &xNmUDM=%&NM%
-----check udmid[%id%]  [%udmid%]
IFEX $[ %udmid%<>-0x8000000 & %udmid%<>%ID% ], EXIT -
FIND $%bOne%=1,  IFEX $%ID%<>1, EXIT -
SET &bUDMtp=2
IFEX $[ %TPX%=%TP_PT_HIDE% | %TPX%=%TP_PT_HIDE% ], SET bUDMtp=0
SET bUDMtp=1
IFEX $%ID%=1, SET bUDMtp=1
SET  gUDMID=1
IFEX $%bUDMtp%=1, SET  gUDMID=1! SET gUDMID=0
IFEX $[ %&SZ%<=0 | %&OFF%<=0 ], EXIT -
SET &mnt=0
SET &TPIH=0
CALC #&&TPIH= ( %TPI% ) | 0x10
FIND $%ATT%=, CALC #&&TPIH= ( %TPI% ) | 0x10! CALC -base=16 #&&TPIH= ( %ATT% ) & 0xC000000000000000
IFEX $%_udm_%<1, SET mnt=1
IFEX $%bUDMtp%=1,!!  IFEX $%_udm_%<1, SET mnt=1
IFEX $%TPX%=%TP_PT_HIDE%,!!  FIND $%mhidex%=1, SET mnt=1
IFEX $%bUDMtp%=2,!!   IFEX $%_udm_%<1, FIND $%mall%=1,  SET mnt=1
IFEX $[ %TPX%=%TP_PT_NORM% & %mnom%<>1 & %mnorhide%>0 & %TPIH%<>0 ], SET mnt=2
FIND $%mnom%=1,  SET mnt=2
IFEX $%TPX%=%TP_PT_NORM%,!!  FIND $%mnom%=1,  SET mnt=2
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%SZ%s<32K, EXIT -
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%TPX%=0xEE, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EFILDR%,  CALC -err=-2 #EFILDROFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%EFILDROFF%, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EMBED%,  CALC -err=-2 #BIOSBOTOFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%BIOSBOTOFF%, EXIT -
IFEX $%udmid%>0, IFEX $[ %bUDMtp%=1 | %bUDMtp%=2 ], SET mnt=3
EXIT  -
FIND $%mnt%=0,  EXIT  -
FORX *NL &PARTX,&&PRTI,
CALL MountMBROS    "%mountop%"   "%&DEV%"  "%&drv%"  &retv  %_exe%
IFEX $[ %Do2%>0 & %doudm%>0 ],  CALL MountMBROS    "%mountop%"   "%&DEV%"  "%&drv%"  &retv  %_exe%
SET &retv2=%retv%
SET retv=%retv1%
TEAM SET &retv2=%retv%| SET retv=%retv1%
FIND $%retv2%<>, SaveRetV "%retv2%"
FORX *NL &AllDevs,&DEV,
FORX * 1,&&LOOP1,
FIND $%&retnm%<>,  ENVI-ret %&retnm%=%&retv%
FIND $%&findbootnm%<>, ENVI-ret %&findbootnm%=%&bootcfg%
EXIT= 0
CALL * mountudm %&arg2x%
@LOGS **ON=0
@IFEX $%&bLOGS%>0, @LOGS
@IFEX $[ %&bLOGS%>0 & '%&OldLOGS%'<>'' ], @LOGS --a --rt --rt? %&OldLOGS%
@RestoLog
EXIT FILE
TEAM CALL * mountudm %&arg2x%| @RestoLog| EXIT FILE
FIND $%&va%=mount, TEAM CALL * mountudm %&arg2x%| @RestoLog| EXIT FILE
MOUN  -udm  -mall  -mhide  -u+  -udm-  \\.\PhysicalDrive%&hd%  C-
@LOGS **ON=0
SET &OldLOGS=%&__LOGS%
SET &bLOGS=0
IFEX Xmnt.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1  Xmnt.LOG
IFEX Xmnt.RT.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1 * Xmnt.RT.LOG! IFEX Xmnt.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1  Xmnt.LOG
IFEX C:\Xmnt3%~1.RT.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **nl=0 **t=1 * C:\Xmnt3%~1.RT.LOG! IFEX Xmnt.RT.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1 * Xmnt.RT.LOG! IFEX Xmnt.LOG, TEAM SET bLOGS=1|LOGS **ON=1 **t=1  Xmnt.LOG
ENVI^ EnviMode=1
SET$ &NL=0D  0A
SET$ &TAB=09
SET-def InnerMode=0
SET-def TP_MBR=0x01
SET-def TP_PE_ISO=0x07
SET-def TP_DATA=0x09
SET-def TP_ISO=0x0A
SET-def TP_VHD=0x0F
SET-def TP_SYSBAK=0xF0
SET-def TP_EFILDR=0xF1
SET-def TP_EMBED=0xF3
SET &TP_PT_MASK=0x20000
SET &TP_PT_NORM=0x20000
SET &TP_PT_HIDE=0x20100
SET &TP_UD_MASK=0x80000
SET &TP_UP_MASK=0x40000
SET &TP_UP_DEEP=0x40100
SET &UD_BIG=0x80
SET-def VA_SDIRMNT=0x20
SET &SZ=-1
SET &OFF=-1
SET &FAT=-1
SET &PART_TP=hd
SET &BEFI=0
TEAM SET &SZ=-1| SET &OFF=-1| SET &FAT=-1| SET &PART_TP=hd| SET &BEFI=0
SET &PART0=
SET  &PARTS=
SET  &PARTX=
SET  PARTN=0
TEAM SET &PART0=| SET  &PARTS=| SET  &PARTX=| SET  PARTN=0
SET-def SECPARAM=65
SET &FAT16Max=2096252K
SET &mhide=0
SET &mnorhide=0
SET &mall=0
SET &mhide1=0
SET &GetHide=
SET &_udm_=0
SET &mountdrvs=
SET &mnom=0
SET &OnlyOne=0
SET &OnlySoft=0
SET &ClearTmp=0
SET &umount=0
SET &rudmid=-0x8000000
SET &_nomorm=1
SET &MntTags=
SET &MntTagsA=
SET &CheckFile=
SET &CheckFileA=
SET &brem=1
CALC -base=16 #&&CLEARMBROSTAGOFF=36s + 0x19E
CALC -base=16 #&&CLEARMBROSTAGOFF1=36s + 0x1BE
CALC -base=16 #&&CLEARMBROSTAGOFF1x=36s + 0x1BE+ 5 + 6
CALC -base=16 #&&CLEARMBROSTAGLEN=0x60
CALC -base=16 #&&CLEARMBROSTAGOFF2=36s + 0x1CE
SET-def  CLEARMBROSTAG0=0x43 0x4C 0x45 0x41 0x52 0x4D 0x42 0x52 0x4F
SET-def CLEARMBROSTAGp1=0x73
SET-def CLEARMBROSTAGp3=0x70
SET &VAinf=
SET &va=%~1
MSTR &&arg2x=<2->%*
SET &_mw=0
SET &bfstp=
SET &findLevel=-1
SET &CheckFs=-1
FIND $%&va%=ClearTmpMBROSAll, TEAM ClearTmpMBROSAll| @RestoLog| EXIT FILE
FIND $%&va%=moun, SET &va=mount
SET &_nomorm=1
SET &retnm=
SET &retv=
SET &mountdrvs=CDEFGHIJKLMNOPQRSTUVZBAWYX
SET &_exe=
SET &mountop=-o ro
SET &BWin=0
SET &umount=0
SET &udmid=-0x8000000
SET &udid=-0x8000000
SET &_uplus=0
SET &_w=0
SET &_udfs=0
SET &_udm_=0
SET &udimg=
SET &udmask=0x00000000
SET &_rawudmask=0
SET &_udmask=
SET &_mh=-0x8000
SET &_opt=
SET &_nbrd=
SET &_curdrv=
SET &_nbrd=--nbrd
SET _exe=-nexe
@TEAM SET &_nbrd=--nbrd| SET _exe=-nexe
SET &ainf=
SET &_dbg=
SET &_mw=0
SET &_fro=0
SET &CheckFile1=
SET &_findboot=
SET &findbootonly=0
SET &findbootnm=
SET &bootcfg=-1
SET  &devtp=
SET &bootdev=
SET &bootid=-1
SET &bfstp=
SET &boothd=-1
SET &hvudmdev=0
TEAM SET  &devtp=| SET &bootdev=| SET &bootid=-1| SET &bfstp=| SET &boothd=-1| SET &hvudmdev=0
SET &I=1
SET &findLevel=-1
SET &EFIBOOTOFF=
SET &EFIBOOTOFF2=
SET &bpt=0
SET &_safe=0
SET &brem=1
ENVI^ ForceLocal=1
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
FIND $-m=%va%,   @TEAM SET BWin=m| @EXIT -
FIND $-w=%va%,   @TEAM SET mountop=| SET _w=1| @EXIT -
FIND $-rem-=%va%,   @TEAM SET brem=0| @EXIT -
FIND $-u=%va%,   @TEAM SET umount=1| @EXIT
FIND $-ud=%va%,   @TEAM SET umount=1| @EXIT -
FIND $-uh=%va%,   @TEAM SET umount=2| @EXIT -
FIND $-muh=%va%,   @TEAM SET umount=0x22| @EXIT -
FIND $-muhg=%va%,   @TEAM SET umount=0x62| @EXIT
FIND $-mnorhide=%va%,  @TEAM SET mnorhide=0x10| @EXIT -
FIND $-fro=%va%,  @TEAM SET _fro=0x20| @EXIT -
FIND $-mhide=%va%,  @TEAM SET mhide=1| @EXIT -
FIND $-mhide-=%va%,  @TEAM SET mhide=0| @EXIT -
FIND $-mhide1=%va%,  @TEAM SET mhide1=1| @EXIT -
SET mall=1
@EXIT -
@TEAM SET mall=1| @EXIT -
FIND $-mall=%va%,   @TEAM SET mall=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
FIND $-m=%va%,   @TEAM SET BWin=m| @EXIT -
FIND $-w=%va%,   @TEAM SET mountop=| SET _w=1| @EXIT -
FIND $-rem-=%va%,   @TEAM SET brem=0| @EXIT -
FIND $-u=%va%,   @TEAM SET umount=1| @EXIT
FIND $-ud=%va%,   @TEAM SET umount=1| @EXIT -
FIND $-uh=%va%,   @TEAM SET umount=2| @EXIT -
FIND $-muh=%va%,   @TEAM SET umount=0x22| @EXIT -
FIND $-muhg=%va%,   @TEAM SET umount=0x62| @EXIT
FIND $-mnorhide=%va%,  @TEAM SET mnorhide=0x10| @EXIT -
FIND $-fro=%va%,  @TEAM SET _fro=0x20| @EXIT -
SET mhide=1
@EXIT -
@TEAM SET mhide=1| @EXIT -
FIND $-mhide=%va%,  @TEAM SET mhide=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
FIND $-m=%va%,   @TEAM SET BWin=m| @EXIT -
FIND $-w=%va%,   @TEAM SET mountop=| SET _w=1| @EXIT -
FIND $-rem-=%va%,   @TEAM SET brem=0| @EXIT -
FIND $-u=%va%,   @TEAM SET umount=1| @EXIT
FIND $-ud=%va%,   @TEAM SET umount=1| @EXIT -
FIND $-uh=%va%,   @TEAM SET umount=2| @EXIT -
FIND $-muh=%va%,   @TEAM SET umount=0x22| @EXIT -
FIND $-muhg=%va%,   @TEAM SET umount=0x62| @EXIT
FIND $-mnorhide=%va%,  @TEAM SET mnorhide=0x10| @EXIT -
FIND $-fro=%va%,  @TEAM SET _fro=0x20| @EXIT -
FIND $-mhide=%va%,  @TEAM SET mhide=1| @EXIT -
FIND $-mhide-=%va%,  @TEAM SET mhide=0| @EXIT -
FIND $-mhide1=%va%,  @TEAM SET mhide1=1| @EXIT -
FIND $-mall=%va%,   @TEAM SET mall=1| @EXIT -
FIND $-mnom=%va%,   @TEAM SET mnom=1| SET _nomorm=0| @EXIT -
FIND $-mnom-=%va%,  @TEAM SET _nomorm=1| @EXIT -
FIND $-mw=%va%,   @TEAM SET _mw=0x100| @EXIT -
FIND $-mw-=%va%,   @TEAM SET _mw=0x200| @EXIT -
FIND $-onlys=%va%,   @TEAM SET OnlySoft=1| @EXIT -
FIND $-Cleartmp=%va%,   @TEAM CALC #ClearTmp=%ClearTmp% || 1| @EXIT -
FIND $-CleartmpOnly=%va%,   @TEAM SET ClearTmp=2| @EXIT -
FIND $[ -ret:=%va% | -ret=%va% ], @TEAM SET retnm=%V2%| @EXIT -
FIND $-udmid:=%va%, @TEAM SET udmid=%V2%| MSTR &&v2p=1,3,%udmid%| FIND $%v2p%=pt#, MSTR udmid=4,0,%udmid%| FIND $%v2p%=pt#, SET bpt=1| @EXIT -
FIND $-safe=%va%,  @TEAM SET _safe=3| @EXIT -
FIND $-safe-=%va%,  @TEAM SET _safe=0| @EXIT -
FIND $-udid:=%va%,  @TEAM SET udid=%V2%| @EXIT -
FIND $-udimg:=%va%,  @TEAM SET udimg_=%V2q%| SET udimg=%udimg% %udimg_%| @EXIT -
FIND $-udmask:=%va%, @TEAM SET udmask=%V2%| SET _udmask=-udmask: %udmask%| @EXIT -
FIND $-rawudmask=%va%,   @TEAM SET _rawudmask=1| @EXIT -
FIND $-opt:=%va%,  @TEAM SET _opt=%_opt% %V2q%| @EXIT -
FIND $-opts:=%va%, @TEAM SET _opt=%_opt% %V2q%| @EXIT -
FIND $-mh:=%va%, @TEAM SET _mh=%V2%| @EXIT -
SET _uplus=1
@EXIT -
@TEAM SET _uplus=1| @EXIT -
FIND $-u+=%va%,   @TEAM SET _uplus=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
FIND $%c1%<>-, EXIT LOOP
RSTR &&cr=1,%va%
FIND $[ %cr%=: | -ret=%va% ], CALC #I=%I% + 1
MSTR &&V2=<~%I%>%*
MSTR &&V2q=<%I%>%*
@TEAM MSTR &&V2=<~%I%>%*| MSTR &&V2q=<%I%>%*
MSTR -term -delims::  &&V1,&&V2=<1><2->%va%
FIND $'%&V2%'<>'',
FIND $[ %cr%<>: & -ret<>%va% ],
CALC #I=%I% + 1
FIND $-curdrv=%va%,  @TEAM SET _curdrv=A| @EXIT -
FIND $-curdrvR=%va%,  @TEAM SET _curdrv=Z| @EXIT -
FIND $-curdrv+=%va%,  @TEAM SET _curdrv=a| @EXIT -
FIND $-curdrvR+=%va%,  @TEAM SET _curdrv=z| @EXIT -
FIND $-exe=%va%,   @TEAM SET _exe=-exe| @EXIT -
FIND $-udfs=%va%,   @TEAM SET _udfs=1| @EXIT -
SET _udm_=1
@EXIT -
@TEAM SET _udm_=1| @EXIT -
FIND $-udm-=%va%,   @TEAM SET _udm_=1| @EXIT -
MSTR &&va=<~%I%>%*
LSTR &&c1=1,%va%
EXIT LOOP
FIND $%c1%<>-, EXIT LOOP
LOOP #1=1,
SET _nomorm=0
IFEX $[ %mhide%>0 | %mhide1%>0 | %mnom%>0 ], SET _nomorm=0
MSTR MntTags=3,0,%MntTags%
MSTR MntTagsA=3,0,%MntTagsA%
MSTR CheckFile=3,0,%CheckFile%
MSTR CheckFileA=3,0,%CheckFileA%
SET &_mw0=%_mw%
CALC -base=16 #&&_wm=%_w% | %_mw0%
MSTR &&DEV=<~%I%>%*
CALC &I=%I% + 1
MSTR &&drv=<~%I%>%*
IFEX  $[ %umount%=1 & '%&DEV%'='' & '%drv%'<>'' ], TEAM RAMD Imdisk*&retv  -D -m  %drv%| EXIT
SET &AutoUDmMount.Drv=
SET &AutoUDmMount.bOld=
SET &AutoUDmMount.hd=-1
SET &AutoUDmMount.UdmId=-1
@TEAM SET &AutoUDmMount.Drv=| SET &AutoUDmMount.bOld=| SET &AutoUDmMount.hd=-1| SET &AutoUDmMount.UdmId=-1
IFEX $%&__UDM.sysinit%=1,
--DBG:_findboot[%_findboot%]==========_findboot
SET &vbootid=-1
FIND $%_findboot%=1,
CALC -err=-1 #boothd=(%boothd%) + 0
FIND $[ '%devtp%'<>'cd' ], CALC -err=-1 #boothd=(%boothd%) + 0
CALC -err=-1 #&&iboothd=( %boothd% ) + 0
SET &bAllDisk=0
FIND $[ %&DEV%=\\.\PhysicalDrive* ], SET &bAllDisk=1
FIND $[ %&DEV%=* ], SET &bAllDisk=2
IFEX $%bAllDisk%>0,  PART LIST DISK  ,&&dsks
IFEX $[ %bAllDisk%>0 & %hvudmdev%>0 & '%devtp%'<>'cd' ],
SET &mountop0=%mountop%
MSTR -delims:|   &vbootid=<1>%bootid%
SED &_wf=0,[^WwRr],,%vbootid%
SED vbootid=0,[WwRr],,%vbootid%
FIND $%_wf%=w, @TEAM SET &mountop=| SET _w=1| CALC -base=16 #&&_wm=%_w% || %_mw0%
CALC -err=-1 #vbootid1=(%vbootid%) + 0
MSTR &&c1=1,1,%drv%
MSTR &&c2=2,1,%drv%
SET  &c2x=%c2%
FIND $%c2%=:, TEAM SET c2=| SET OnlyOne=1
FIND $%c2%=,  SET mountdrvs=%c1%
FIND $%c1%<>, FIND $%c2%=,  SET mountdrvs=%c1%
FIND $%c2%<>-,   SET mountdrvs=%drv%
FIND $%c2%<>,  FIND $%c2%<>-,   SET mountdrvs=%drv%
SET drv=%c1%:
FIND $%c1%<>, SET drv=%c1%:
SET mountdrvs=
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
SET mountdrvs=%mountdrvs%%d%
FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
FORX * A B C D E F G H I J K L M N O P Q R S T U V W Y Z,&&d, FIND $%d%>=%c1%, SET mountdrvs=%mountdrvs%%d%
FIND $%c2%=-,
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive drv
FIND $%c2x%=:,!   GetFreeDrive drv
CALL ParseDrviList
SET &MountDrv=
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive &MountDrv
TEAM SET &MountDrv=| GetFreeDrive &MountDrv
SET &Ix=1
FIND $[ %bfstp%=udm ],
FIND $%bfstp%=ud,
FIND $%bfstp%=u+,
FIND $%bfstp%=pt,
FIND $%bfstp%=udm, IFEX $[ %boothd%>=0 & %vbootid%>0 ], TEAM SET mall=0| SET mhide=0
FIND $%_mh%=efi, SET _mh=-1
FIND $%_mh%=auto, SET _mh=0
CALC -err=-0x8000 #_mh=(%_mh%) + 0
--udmid[%udmid%]
CALC #&&GetHide=%mhide% | %mnorhide%
SET &ainfhd=
IFEX $%bAllDisk%>0,  PART LIST DISK  ,&&dsks
IFEX $%bAllDisk%>0, TEAM MSTR &&hd=<1>%dsks%| SET DEV=\\.\PhysicalDrive%&hd%
IFEX $[ '%&boothd%'<>'all' & %&boothd%>=0 & %bAllDisk%>0 & %ClearTmp%>0 ],
FIND $[ %bfstp%=udm | %bfstp%=ud | %bfstp%=u+ | %bfstp%=pt ], EXIT
IFEX $%&iboothd%>=0, TEAM SET AllDevs=\\.\PhysicalDrive%&iboothd%| SET hd=%&iboothd%| SET hd1=%&hd%| SET DEV=\\.\PhysicalDrive%&hd%
IFEX $[ %hd%<0 & %bAllDisk%<0 ], ChekHD &hd  "%&DEV%"
FIND $%bfstp%=cd,
FIND $%bfstp%=cd, EXIT
FIND $%findbootonly%>0, EXIT
FIND $[ '%_curdrv%'<>'' & '%CheckFile1%'<>'' ],
SET &hd1=%hd%
SET &AllDevs=%&DEV%
IFEX $[ '%&boothd%'='all' | %&boothd%<0 & %bAllDisk%>0 ],
SET ainf=VAinf
SET ainfhd=%hd%
TEAM SET ainf=VAinf| SET ainfhd=%hd%
IFEX $%hd1%>=0,  TEAM SET ainf=VAinf| SET ainfhd=%hd%
FIND $%ainf%=,!! IFEX $%hd1%>=0,  TEAM SET ainf=VAinf| SET ainfhd=%hd%
SET~  VAinf=%ainf%
SET &dsks=%~3
FIND $%dsks%=, PART list disk ,&&dsks
PART -hextp -phy#  LIST  part  %&dsk%,&&prts
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V
SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
FORX * %&prts%,&&prt, TEAM PART -hextp -phy#  LIST  part  %&dsk%:%prt%,&&V| SET diskprts=%diskprts% %&NL%%dsk% %prt% %&V%
FORX * %dsks%,&&dsk,
MSTR &diskprts=3,0,%&diskprts%
FIND $%diskprts%=, SET diskprts=*
ENVI-ret %~1=%&diskprts%
ENVI-ret %~2=%&diskprts%
GetAllPart VAinf %ainf%  "%ainfhd%"
FIND $%&VAinf%=, GetAllPart VAinf %ainf%  "%ainfhd%"
TEAM SET~  VAinf=%ainf%| FIND $%&VAinf%=, GetAllPart VAinf %ainf%  "%ainfhd%"
FIND $%ainf%<>,!! TEAM SET~  VAinf=%ainf%| FIND $%&VAinf%=, GetAllPart VAinf %ainf%  "%ainfhd%"
SET &hd1=%hd%
SET &doudm=1
IFEX $[ %_udm_%<1 | %mhide%>0 | %mhide1%>0 ], SET &doudm=1! SET &doudm=0
---AllDevs[%&AllDevs%]
ENVI &&SZ=-1
ENVI &&OFF=-1
ENVI &&FAT=-1
SET &PART_TP=hd
SET &BEFI=0
TEAM ENVI &&SZ=-1| ENVI &&OFF=-1| ENVI &&FAT=-1| SET &PART_TP=hd| SET &BEFI=0
SET  &PART0=
SET  &PARTS=
SET  &PARTX=
SET  PARTN=0
TEAM SET  &PART0=| SET  &PARTS=| SET  &PARTX=| SET  PARTN=0
SET &_mh=%_mh%
@TEAM SET &_mh=%_mh%
SET &hd=%hd1%
SET hd1=
@TEAM SET &hd=%hd1%| SET hd1=
@FIND $%hd%=, ChekHD &&hd  "%&DEV%"
SET &IMG=%~1
SET &EFIBOOTOFF=0
SET &EFIBOOTOFF2=0
SET &EFIBOOTSZ=-1
SET &SECPARAM=%SECPARAM%
SET &CfgOK=0
SET SECPARAMB=65
SET SECPARAM0=37
SET &SECPARAM=%SECPARAMB%
GETF#  %&IMG%,%SECPARAM0%s#1s,&&DAT
SET?long   DAT=&&BootTAG:0x1B4
SET?short  DAT=&&BootOK:0x1FE
----------------------------
IFEX $[ %BootTAG%=0x5352424D & %BootOK%=0xAA55 ],
GETF# %&IMG%,67s#1s,&&S
SET?char  S=&&V1:0x1F8
SET?int64 S=&&of1:0x1F0
CALC &&VC=0xC0 & %v1%
EXIT _SUB
IFEX $%VC%<>0x40, EXIT _SUB
IFEX $[ ( %BootTAG%=0x46424246 | %BootTAG%=0x534C5055 ) & %BootOK%=0xAA55 ],
CALL * GetCFG \\.\PhysicalDrive%&hd%
IFEX $[ %ClearTmp%>=1 & %hd%>=0 & %&doudm%<=0 ], ClearTmpMBROS %ClearTmp% "%&hd%" -getsize
SET &ok11=1
FIND $%&bootdev%<>, IFEX $%hd%<0, EXIT -
FIND $%&bootdev%<>,
IFEX $%&ok11%<0, EXIT -
SET &MountDrv=
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive &MountDrv
TEAM SET &MountDrv=| GetFreeDrive &MountDrv
IFEX #%bpt%>0, TEAM MountHdPtImd "%hd%"  "%&udmid%"  "%&drv%" | @EXIT -
FIND $%bfstp%=pt, TEAM MountHdPt "%hd%"  "%&bootid%"  "%&MountDrv%" | EXIT -
SET &retv1=%retv%
SET retv=
TEAM SET &retv1=%retv%|  SET retv=
FIND $%udmask%=0, CALC &&udmask=4 | 8 | 16 | 32 | 1
FIND $%udimg%=, FIND $%udmask%=0, CALC &&udmask=4 | 8 | 16 | 32 | 1
FIND $%udimg%<>,  SET &udmask=0x40007D
FIND $0x00000000=%udmask%, FIND $%udimg%<>,  SET &udmask=0x40007D
SET &udmask=0xF2007D
SET &CheckFs=1
FIND $%CheckFs%=-1, SET &CheckFs=1
TEAM SET &udmask=0xF2007D| FIND $%CheckFs%=-1, SET &CheckFs=1
FIND $0x00000000=%udmask%,!! TEAM SET &udmask=0xF2007D| FIND $%CheckFs%=-1, SET &CheckFs=1
FIND $%udmask%=, FIND $%udimg%<>,  SET &udmask=0x40007D
FIND $%udmask%=,!! TEAM SET &udmask=0xF2007D| FIND $%CheckFs%=-1, SET &CheckFs=1
SET &udimg=*.img *.iso
FIND $%udimg%=, SET &udimg=*.img *.iso
IFEX $[ %_udfs%>0 & ( %hd%>=0 | %_mh%<-1 ) ], MAPUD  "%&DEV%"  "%&drv%"  &retv
SET &retv2=%retv%
SET retv=%retv1%
TEAM SET &retv2=%retv%| SET retv=%retv1%
FIND $%retv2%<>, SaveRetV "%retv2%"
SET &upoff=-1
SET &upsz=-1
TEAM SET &upoff=-1| SET &upsz=-1
ENVI^ ForceLocal=1
SET &IMG=%~1
MSTR &&hd=18,0,%~1
TEAM SET &IMG=%~1| MSTR &&hd=18,0,%~1
SET &Drv=%~2
SET &w=%~3
CALC  #w=%w%
SET &OK=0
CALC -err=-0x80000 #&hd=( %hd% ) + 0
SET &IMG=%~1
TEAM SET &IMG=%~1
ENVI-ret %~2=-1
ENVI-ret %~3=-1
ENVI-ret %~4=0
TEAM ENVI-ret %~2=-1| ENVI-ret %~3=-1| ENVI-ret %~4=0
CALC &&p=67s + 0x1B4
GETF %&FN%,%p%#4,&&S
FIND $%S%=0x55 0x50 0x4C 0x53, EXIT
TEAM CALC &&p=67s + 0x1B4| GETF %&FN%,%p%#4,&&S| FIND $%S%=0x55 0x50 0x4C 0x53, EXIT
IFEX $1=0,
GETF   %IMG%,0xC000#1,&&V
EXIT
FIND $%&V%<>0xEB, EXIT
TEAM GETF   %IMG%,0xC000#1,&&V| FIND $%&V%<>0xEB, EXIT
FindUPlus %1 &&pb &&ps &&OK
EXIT
IFEX $%ps%<=0, EXIT
MountUplus "%&DEV%"  "%&MountDrv%"  %_wm%
IFEX $%_uplus%>0,  MountUplus "%&DEV%"  "%&MountDrv%"  %_wm%
SET &Do2=1
IFEX $[ %_uplus%>0 & %udmid%<>-0x8000000 & %udmid%<0 ], SET &Do2=0! SET &Do2=1
SET &retv1=%retv%
SET retv=
TEAM SET &retv1=%retv%|  SET retv=
SET &_exe=%~5
ENVI-ret %~4=
SET &op=%~1
SET &MBROS=%~2
SET &MountDrv=%~3
SET &hd=
LSTR &&LDEV=17,%~2
ENVI &&hd=-0x8000
SET &&c1=
MSTR &&c1=18,1,%~2
FIND $\\.\PhysicalDrive=%&LDEV%, MSTR &&c1=18,1,%~2
MSTR &&c2=19,1,%~2
MSTR &&c3=20,1,%~2
FIND $%&c1%>9, TEAM SET c1=
FIND $%&c2%>9, TEAM SET c2=
FIND $%&c3%>9, TEAM SET c3=
FIND $%&c1%<0, TEAM SET c2=| SET c3=|
SET c3=
TEAM SET c3=|
FIND $%&c2%<0, TEAM SET c3=|
CALC #&hd=%c1%
FIND $%&c1%>=0, CALC #&hd=%c1%
FIND $%&c2%>=0, CALC #&hd=%&hd% * 10 + %&c2%
FIND $%&c3%>=0, CALC #&hd=%&hd% * 10 + %&c3%
ENVI-ret %~1=%&hd%
ChekHD &hd  "%&MBROS%"
SET &OFF=-1
SET &SZ=-1
FIND $%&hd%=,  EXIT
CALC #&hd=%&hd%
IFEX $%&umount%=1,
IFEX $%&hd%<0,  EXIT
IFEX $%&umount%=0,!! IFEX $%&hd%<0,  EXIT
set &v1=%&umount%
IFEX $%umount%=0x22,  set &v1=0
FIND $%&upoff%=, TEAM SET &upoff=-1| SET &upsz=-1
FIND $%&MountDrv%=, TEAM FDRV  *rsort *idle  &&Drv=*:| MSTR  &MountDrv=<1>%&Drv%
find $%v1%=0, FIND $%&MountDrv%=, TEAM FDRV  *rsort *idle  &&Drv=*:| MSTR  &MountDrv=<1>%&Drv%
FIND $%&MountDrv%=,  EXIT
IFEX $%&umount%=0, FIND $%&MountDrv%=,  EXIT
ENVI &&ShowDrv=
ENVI &&FN=\\.\PhysicalDrive%&hd%
ENVI &&SZ=-1
ENVI &&OFF=-1
ENVI &&FAT=-1
SET &PART_TP=hd
SET &BEFI=0
TEAM ENVI &&SZ=-1| ENVI &&OFF=-1| ENVI &&FAT=-1| SET &PART_TP=hd| SET &BEFI=0
PART update  %&hd%
SET &SzOnly=
IFEX $%ClearTmp%>1, SET &SzOnly=-SzOnly! SET &SzOnly=
CALC -base=16 #&&listudmflags=4 | %_uplus% | 0x200
ENVI^  ForceLocal=1
ENVI &&FN=%~1
SET &SZ=-1
SET &OFF=-1
TEAM SET &SZ=-1| SET &OFF=-1
SET &UDlist=
SET &bUDm=0
SET &bUD=0
SET &bUD1=0
SET &udfs=%~4
CALC -base=16 #&&_uplus=%udfs% & 0xFA
SET &_up=%_uplus%
CALC #&&noptimd=%udfs% & 4
CALC #&&_limit=%udfs% & 0x100
CALC #&&_vhd=%udfs% & 0x200
CALC #udfs=%udfs% & 1
SET &_udmask=%~5
SET &I6=6
SET &brGPTAtt=0
SET &SzOnly=0
FIND $%~6=-SzOnly,TEAM SET I6=7| SET &SzOnly=2! SET &SzOnly=0
MSTR &&v7=<%I6%>%*
FIND $%v7%=-GPTAtt,TEAM CALC #I6=%I6% + 1| SET brGPTAtt=1
SET I6=8
SET brGPTAtt=1
TEAM SET I6=8| SET brGPTAtt=1
FIND $%~7=-GPTAtt,TEAM SET I6=8| SET brGPTAtt=1
MSTR &&udimg=<%I6%->%*
SET _udmask=-udmask: 0xF2007D
FIND $%_udmask%=, SET _udmask=-udmask: 0xF2007D
SET udimg=*.img *.iso
FIND $%udimg%=, SET udimg=*.img *.iso
CALC  -err=-0x8000000 #&&rudmid=(%rudmid%)+0
SET &bUPh=0
SET &UPlusId=-1000
RAMD Imdisk*&&OKImd --version
SED &OKImd=0,\., ,%&OKImd%
MSTR &&hv1,&&lv1,&&OKImd=<3><4><5>%&OKImd%
CALC -base=16 #&&ImdiskVerOK=0x0%hv1% * 0x100 + 0x0%lv1%
IFEX #%ImdiskVerOK%<1, SET ImdOK=
SET &drvm=
SET &NoUD=0
SET SECPARAMB=65
SET SECPARAM0=37
SET &SECPARAM=%SECPARAMB%
GETF#  %&FN%,%SECPARAM0%s#1s,&&DAT
SET?long   DAT=&&BootTAG:0x1B4
SET?short  DAT=&&BootOK:0x1FE
----------------------------
IFEX $[ %BootTAG%=0x5352424D & %BootOK%=0xAA55 ],
SET &bUDx=1
SET bUPh=-1
TEAM SET &bUDx=1| SET bUPh=-1
IFEX $[ %BootTAG%=0x46424246 & %BootOK%=0xAA55 ], TEAM SET &bUDx=1| SET bUPh=-1! SET &bUDx=0
SET &bUPx=0
IFEX $[ %BootTAG%=0x534C5055 & %BootOK%=0xAA55 ], TEAM SET &bUPx=1| SET bUPh=-1! SET &bUPx=0
GETF# %&FN%,67s#1s,&&S
SET?char  S=&&V1:0x1F8
SET?int64 S=&&of1:0x1F0
CALC &&VC=0xE0 & %v1%
IFEX $%udfs%<=0, TEAM SET NoUD=1| EXIT -
MOUN -udm listud  -ret: &UDlist   %_udmask%  %&FN%  %udimg%
MSTR &&v1=<1>%UDlist%
SET bUD=1
IFEX  $[ %V1%>=0xFF00 & %V1%<0x20000 ],CALC bUD=3
IFEX $[ %VC%=0 & %bUDx%=1 ],
IFEX $[ %bUDx%=1 | %bUPx%=1 ],
IFEX $%bUPh%=0,
IFEX $%NoUD%>0, EXIT LOOP
CALC -base=16 &&p=%SECPARAM%s + 3
GETF  %&FN%,%p%#10,&&DAT
FIND $%DAT%=0x4D 0x42 0x52 0x4F 0x53 0x50 0x41 0x52 0x41 0x4D,  EXIT LOOP
SET NoUD=2
EXIT LOOP
TEAM SET NoUD=2| EXIT LOOP
IFEX $%SECPARAM%=%SECPARAMB%, TEAM SET NoUD=2| EXIT LOOP
LOOP #%bUD%<>3,
SET NoUD=3
IFEX $%_udm_%>0, SET NoUD=3
SET &NoUDx=%NoUD%
SET NoUDx=0
IFEX $%bUD%=1, SET NoUDx=0
IFEX $%NoUD%>=2, IFEX $%bUD%=1, SET NoUDx=0
FIND $%GetHide%=, SET &GetHide=1
IFEX $%mnorhide%>0, SET &GetHide=1
IFEX $[ %GetHide%<1 & %_udfs%>0 & %bUDx%>0 & %mhide1%>0 ], SET GetHide=1
IFEX $[ %GetHide%<1 & %_up%>0 & %bUPh%>0 & %mhide1%>0 ], SET GetHide=1
IFEX $[ %_up%>0 & %bUPh%>0 & %hd%>=0 & ( %mhide1%>0 | %mhide%>0 ) ],
SET &CheckUP=%bUPh%
IFEX $[ %GetHide%<1 & %_udm_%<1 & %bUDm%>0 & %mhide1%>0 ], SET GetHide=1
SET &TPS1=核心UDM分区
SET &TPS2=UDM分区
TEAM SET &TPS1=核心UDM分区| SET &TPS2=UDM分区
SET &bNormUDUP=0
SET &EFIBOOTOFF=0
SET &EFIBOOTOFF2=0
GETF# %FN%,%SECPARAM%s#1s,&&DAT
SET?long  &DAT=&&EFIBOOTOFF:0x28
SET?long  &DAT=&&EFIBOOTSZ:0x2C
SET?long  &DAT=&&Hi:0x68
CALC -base=16 EFIBOOTOFF=%EFIBOOTOFF% + SHL(%Hi%,32)
SET?int64  &DAT=&&EFIBOOTOFF2:0x74
IFEX $%EFIBOOTOFF2%=0, SET EFIBOOTOFF2=-1
SET &&SUBOFF=0
IFEX #%InnerMode%>0, SET?int64 DAT=&&SUBOFF:0xA8
CALC &&SECUMBR=%SECPARAM% + 1
CALC &&BOOBAK=%SECPARAM% - 2
GETF# %&FN%,%BOOBAK%s#1s,&&S
SET?char S=&&V1:0x36
SET?long S=&&V:0x37
IFEX $[ 0x46=%V1% | 0x56=%V1% ],  IFEX $0x36315441=%&V%, ENVI &FAT=16
IFEX $[ 0x46=%V1% | 0x56=%V1% ],  IFEX $0x32315441=%&V%, ENVI &FAT=12
SET?char S=&&V1:0x52
SET?long S=&&V:0x53
IFEX $[ 0x46=%V1% | 0x56=%V1% ],  IFEX $0x32335441=%&V%, ENVI &FAT=32
IFEX $%&FAT%>0,
SET?short S=&V:0x1FE
IFEX $0xAA55=%&V%,!  ENVI &SZ=-1
SET?long S=&V:0x1B4
ENVI &SZ=-1
IFEX $0x5352424D=%&V%,!  ENVI &SZ=-1
CALC -base=16 &&addr=%SECPARAM%s +  0x50
GETF %FN%,%addr%#1,&&bHideHigh
CALC #bHideHigh=(%bHideHigh%/2) & 3
SET SZ=0
IFEX $[ %SZ%<=0 % %bHideHigh%>0 ], SET SZ=0
SET  PARTN=0
SET &init1=0
IFEX $%SZ%>0, SET &init1=1
FIND $%&&init1%=1,
SET &FNx=%FN%
SET &bUPARAM=0
@TEAM SET &bUPARAM=0
CALC -base=16 &&addr=%SECPARAM%s +  0x3
GETF %FN%,%addr%#10,&&V
FIND $%V%=0x4D 0x42 0x52 0x4F 0x53 0x50 0x41 0x52 0x41 0x4D, SET bUPARAM=1
CALC -base=16 &&addr=%SECPARAM%s +  0xD
GETF %FN%,%addr%#2,&&Vx
MSTR &&V1,&&V2=<1><2>%Vx%
CALC &&V=%V1%* 0x100 + %V2%
TEAM GETF %FN%,%addr%#2,&&Vx| MSTR &&V1,&&V2=<1><2>%Vx%| CALC &&V=%V1%* 0x100 + %V2%
IFEX $%bUPARAM%>0, IFEX $%V%>=4, SET bUPARAM=4
SET &SZ1=0x20
IFEX $%bUPARAM%>=4, SET &SZ1=0x40! SET &SZ1=0x20
CALC #&&SZA=%SZ1% / 8
CALC #&&SZP=1s / %SZ1% - 1
SET?short DAT=&NPS:0x14
SET NPS=0x40
IFEX $%NPS%>0x40, SET NPS=0x40
SET &MAX=0
CALC #&&len=%SZP% * %SZ1%
GETF %FN%,%SECUMBR%s#0x10,&V
SET &I=0
CALC -base=16 &&addr0=%SECUMBR%s
CALC -base=16 &&addr=%SECUMBR%s + %I%s +  0x3
GETF %FN%,%addr%#9,&&V1
CALC -base=16 #&&addr=%SECUMBR%s + %I%s + 0x10
CALC I=%I% + 1
EXIT
FIND $%V1%<>0x4D 0x42 0x52 0x4F 0x53 0x50 0x41 0x52 0x54,  EXIT
LOOP #%I%<%NPS%,
SET &bUMBR=%MAX%
IFEX $[ %bUPARAM%>0 && %CheckUP%>0 ], SET CheckUP=0
SET &I=0
CALC &&IOF=0x11 - %SZ1%
CALC &&ISZ=0x15 - %SZ1%
CALC &&ITP=0x19 - %SZ1%
CALC &&INM=0x1C - %SZ1%
IFEX $%bUPARAM%>=4,
SET MAX=-10
IFEX $[ %SZ%<0 | %bUMBR%<1 | 0=%NPS% ],  SET MAX=-10
SET &UDm=UDm
SET &bUDMany=0
CALC #&&bUD1=%bUD% & 1
SET &UDm=UD
SET MAX=100
SET &Vi=
READ -*,2,&&Vi,&UDlist
FIND $%Vi%<>, SET bUDMany=0x200
IFEX $%bUD1%>=1,
SET bNormUDUP=1
IFEX $%bUD%=1, SET bNormUDUP=1
SET &TPI=0
SET &OFI=0
SET &SZI=0
TEAM SET &TPI=0| SET &OFI=0| SET &SZI=0
CALC &I=%I% + 1
CALC &IOF=%IOF% + %SZ1%
CALC &ISZ=%ISZ% + %SZ1%
CALC &INM=%INM% + %SZ1%
CALC &ITP=%ITP% + %SZ1%
SET &SkipUD1=0
SET &TPI=0
SET &FTPI=0
SET &VAI=0
SET &NMI=
TEAM SET &TPI=0| SET &FTPI=0| SET &VAI=0| SET &NMI=
SET &TPI=%TP_UD_MASK%
SET &FTPI=0x1E
SET &VAI=0x0
TEAM SET &TPI=%TP_UD_MASK%| SET &FTPI=0x1E| SET &VAI=0x0
READ -*,%I%,&&Vi,&UDlist
FIND $''='%Vi%', EXIT LOOP
MSTR &&tpx,&&NMI,&&OFI,&&SZI=<1><~2><3><4>%Vi%
CALC #&&tpx1=%tpx% & 0x3C
CALC #&&mpefi=%tpx% & 0x3C
CALC #&&listf=%tpx% & 0x40
CALC #&&bigf=%tpx% & %UD_BIG%
IFEX $%tpx1%>0,     CALC -base=16 TPI=%TP_UD_MASK% + 0x100
IFEX $%mpefi%>0,    CALC -base=16 TPI=%TP_UD_MASK% + 0x200
IFEX $%listf%>0,    CALC -base=16 TPI=%TP_UD_MASK% + 0x300
IFEX $%bigf%>0,     CALC -base=16 TPI=%TP_UD_MASK% + 0x400
IFEX $%tpx%=0xFF00, CALC -base=16 TPI=%TP_UD_MASK% + 0x800
CALC -base=16 TPI=%TP_UD_MASK% + 0x900
IFEX $%tpx%>0xFF00, CALC -base=16 TPI=%TP_UD_MASK% + 0x900
MSTR &&NMI1=<1>%NMI%
FIND $%NMI1%<>%NMI%, SET NMI="%NMI%"
CALC #SZI=(%SZI%+ 1s - 1)/1s
CALC #OFI=%OFI%
IFEX $%[ %I%=1 & %bUDMany%=0x200 & %tpx%=0xFF00 ], SET SkipUD1=1
FEXT &&ext=%NMI%
FIND $iso=%ext%, SET TPI=%TP_ISO%
IFEX $%SZ%<0, TEAM SET SZ=%SZI%| SET OFF=%OFI%
IFEX $%bUD1%>0,
-----------I=%I% TPI=%TPI% bUD1=%bUD1% SkipUD1=%SkipUD1%-----------
IFEX $%TPI%=0, EXIT -
IFEX $%SkipUD1%=1, EXIT  -
ENVI  &&INF=%OFI% %SZI% %VAI%
CALC &&SZK=%SZI% / 2
ENVI %~1=%~2#%~3#%~4$
CALL *  GetWimName  &&WimName PhysicalDrive%hd%  %OFI%   %SZI%
IFEX $%SzOnly%<=1, CALL *  GetWimName  &&WimName PhysicalDrive%hd%  %OFI%   %SZI%
SET-def id=-1
SET-def drv=
SET-def FN=%~3
STRL &&len=%FN%
CALC &&len2=%len% - 1
SET  &FN2=%FN%
LSTR &&L4=4,%FN%
LSTR FN2=%len2%,%FN%
FIND $\??\=%L4%, SET len=0! LSTR FN2=%len2%,%FN%
SET &off=%~4
CALC #off=%off%
@TEAM SET &off=%~4| CALC #off=%off%
SET &FNB=%~5
STRL &&lenB=%FNB%
FIND $%&FNB%=, SET FNB=*N/A*
RAMD ImDisk*&&all -nexe  -l -n
SET-def vi=
SET-def nm=
RAMD ImDisk*&&v  -l -u %&i%
READ  -*,1,&vi,&v
READ  -*,3,&&v3,&v
MSTR  &&v3a,&&v3b=<1*>%&v3%
FIND $%&v3a%<>offset:, SET v3b=0
MSTR &nm=6,%&len%,%&vi%
MSTR &nmB=6,%&lenB%,%&vi%
EXIT -
IFEX $[ '%&FN%'<>'%&nm%' & '%&FN2%'<>'%&nm%' &   ( '%&FNB%'<>'%&nmB%' |  %v3b%<>%off% ) ], EXIT -
FORX * %&all%,&&i,
ENVI-ret %~1=%&id%
ENVI-ret %~2=%&drv%
FINDImdisk  &&id  &&drvm  "\BaseNamedObjects\Global\%WimName%"   %OFI%s   \??\PhysicalDrive%hd%
IFEX $%SzOnly%<=1, FINDImdisk  &&id  &&drvm  "\BaseNamedObjects\Global\%WimName%"   %OFI%s   \??\PhysicalDrive%hd%
FIND $%OKImd%=OK, IFEX $%SzOnly%<=1, FINDImdisk  &&id  &&drvm  "\BaseNamedObjects\Global\%WimName%"   %OFI%s   \??\PhysicalDrive%hd%
IFEX $[ %rudmid%>=0 & %rudmid%<>%I% ], EXIT -
SET &T1=%NMI%
IFEX $%bUD%=1, SET &T1=%NMI%!SET &T1=核心UDM分区
SET  PART0=%T1% %SZK%K %NMI% %drvm%
SET  PARTS=%PART0%
SET  PARTX=%T1% %OFI% %SZI% %TPI% %VAI% "%NMI%" "%drvm%"  %TPS1% %FTPI% %I%%Slimit%
SET  PARTN=1
SET OFF=%OFI%
SET SZ=%SZI%
TEAM  SET OFF=%OFI%| SET SZ=%SZI%
FIND $%I%=1,
IFEX $%SzOnly%>1, EXIT  LOOP
SET &TPI=0
SET &OFI=0
SET &SZI=0
TEAM SET &TPI=0| SET &OFI=0| SET &SZI=0
CALC &I=%I% + 1
CALC &IOF=%IOF% + %SZ1%
CALC &ISZ=%ISZ% + %SZ1%
CALC &INM=%INM% + %SZ1%
CALC &ITP=%ITP% + %SZ1%
SET &SkipUD1=0
SET &TPI=0
SET &FTPI=0
SET &VAI=0
SET &NMI=
TEAM SET &TPI=0| SET &FTPI=0| SET &VAI=0| SET &NMI=
SET &TPI=%TP_UD_MASK%
SET &FTPI=0x1E
SET &VAI=0x0
TEAM SET &TPI=%TP_UD_MASK%| SET &FTPI=0x1E| SET &VAI=0x0
READ -*,%I%,&&Vi,&UDlist
EXIT LOOP
FIND $''='%Vi%', EXIT LOOP
IFEX $%bUD1%>0,
LOOP #%I%<%MAX%,
IFEX $%NoUDx%<1,
SET &OFFH=%OFF%
SET &SZH=%SZ%
SET &lpt=1
IFEX $[ %SzOnly%<=2 & %&hd%>=0 & %_nomorm%<1 & %GetHide%>0 ], SET &lpt=1! SET &lpt=0
IFEX $[ %CheckUP%>0 & %_up%>0 & %SzOnly%<=1 ],
SET VAI=0x1000
SET NMI=
SET &&drvm=
TEAM SET VAI=0x1000| SET NMI=| SET &&drvm=
----GetUDPart：lpt[%lpt%]
PART list part %&hd%,&&allps
IFEX $%j%<0, EXIT  -
SET &hd=%1
SET &j=%2
SET &V=
@TEAM SET &hd=%1| SET &j=%2| SET &V=
FIND $%&VAinf%=, TEAM PART -hextp -phy#  LIST  part  %&hd%:%&j%,&&V| ENVI-ret %~3=%&V%| EXIT _SUB
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
MSTR &V=<3->%Vi%
EXIT  FORX
TEAM MSTR &V=<3->%Vi%| EXIT  FORX
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
FORX *NL &VAinf,&&Vi,
ENVI-ret %~3=%&V%
GETPARTINF %hd%  %j%  &&V
MSTR &&id,&&TPI,&&AcGPT,&&OFI,&&SZI,&&ATT,&&i,&&drv=<1><2><3><4><5><6><8><9>%V%
IFEX $[ '%AcGPT%'<>'GPT' & %TPI%=0 ] ,  EXIT -
SET &tp=隐藏分区
LSTR &&id1=1,%id%
FIND $"%id1%"="=", TEAM SET id=0| set id1=0
FIND $[ %id1%=@ | %id1%=- | %id1%:=: ],  EXIT -
SET &tp=正常分区
IFEX $%id%<>0, SET &tp=正常分区
IFEX $%UPlusId%=%id%, SET &tp=隐藏分区
CALC #&&OFI=%OFI% / 512
CALC #&&SZI=%SZI% / 512
CALC &&SZK=%SZI% / 2
IFEX $%OFI%=%EFIBOOTOFF%,  EXIT  -
IFEX $%OFI%=%EFIBOOTOFF2%,  EXIT  -
IFEX $%OFI%=%OFF%, IFEX $%SZI%=%SZ%,  EXIT  -
ENVI %~1=%~2#%~3#%~4$
CALL *  GetWimName  &&WimName  PhysicalDrive%hd%  %OFI%   %SZI%
IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
FIND $%OKImd%=OK, IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
SET &utp=%TP_PT_NORM%
FIND $%tp%=隐藏分区, SET &utp=%TP_PT_HIDE%! SET &utp=%TP_PT_NORM%
IFEX $%PARTN%=0, SET  PART0=第%I%%tp% %SZK%K %NMI% %drv%%drvm%
SET  PARTS=%PARTS%|第%I%%tp% %SZK%K %NMI% %drv%%drvm%
SET  PARTX=%PARTX%%NL%
FIND $%PARTX%<>, SET  PARTX=%PARTX%%NL%
SET ATT=
IFEX $[ %brGPTAtt%>0 & '%AcGPT%'='GPT' ],SET ATT=0x%ATT%!  SET ATT=
SET  PARTX=%PARTX%第%I%%tp% %OFI% %SZI% %utp% %VAI% "%NMI%" "%drv%%drvm%" %tp% %TPI% %i%  %ATT%
CALC PARTN=%PARTN% + 1
EXIT  -
IFEX $%j%<0, EXIT  -
IFEX $%j%<0, EXIT  -
SET &hd=%1
SET &j=%2
SET &V=
@TEAM SET &hd=%1| SET &j=%2| SET &V=
FIND $%&VAinf%=, TEAM PART -hextp -phy#  LIST  part  %&hd%:%&j%,&&V| ENVI-ret %~3=%&V%| EXIT _SUB
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
MSTR &V=<3->%Vi%
EXIT  FORX
TEAM MSTR &V=<3->%Vi%| EXIT  FORX
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
FORX *NL &VAinf,&&Vi,
ENVI-ret %~3=%&V%
GETPARTINF %hd%  %j%  &&V
MSTR &&id,&&TPI,&&AcGPT,&&OFI,&&SZI,&&ATT,&&i,&&drv=<1><2><3><4><5><6><8><9>%V%
IFEX $[ '%AcGPT%'<>'GPT' & %TPI%=0 ] ,  EXIT -
SET &tp=隐藏分区
LSTR &&id1=1,%id%
FIND $"%id1%"="=", TEAM SET id=0| set id1=0
FIND $[ %id1%=@ | %id1%=- | %id1%:=: ],  EXIT -
IFEX $%id%<>0, SET &tp=正常分区
IFEX $%UPlusId%=%id%, SET &tp=隐藏分区
CALC #&&OFI=%OFI% / 512
CALC #&&SZI=%SZI% / 512
CALC &&SZK=%SZI% / 2
IFEX $%OFI%=%EFIBOOTOFF%,  EXIT  -
IFEX $%OFI%=%EFIBOOTOFF2%,  EXIT  -
IFEX $%OFI%=%OFF%, IFEX $%SZI%=%SZ%,  EXIT  -
ENVI %~1=%~2#%~3#%~4$
CALL *  GetWimName  &&WimName  PhysicalDrive%hd%  %OFI%   %SZI%
IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
FIND $%OKImd%=OK, IFEX $%&noptimd%<=0, FINDImdisk  &&id  &drvm  "\BaseNamedObjects\Global\%&WimName%"    %OFI%s   \??\PhysicalDrive%hd%
SET &utp=%TP_PT_HIDE%
FIND $%tp%=隐藏分区, SET &utp=%TP_PT_HIDE%! SET &utp=%TP_PT_NORM%
IFEX $%PARTN%=0, SET  PART0=第%I%%tp% %SZK%K %NMI% %drv%%drvm%
SET  PARTS=%PARTS%|第%I%%tp% %SZK%K %NMI% %drv%%drvm%
SET  PARTX=%PARTX%%NL%
FIND $%PARTX%<>, SET  PARTX=%PARTX%%NL%
SET ATT=
IFEX $[ %brGPTAtt%>0 & '%AcGPT%'='GPT' ],SET ATT=0x%ATT%!  SET ATT=
SET  PARTX=%PARTX%第%I%%tp% %OFI% %SZI% %utp% %VAI% "%NMI%" "%drv%%drvm%" %tp% %TPI% %i%  %ATT%
CALC PARTN=%PARTN% + 1
EXIT  -
IFEX $%j%<0, EXIT  -
FORX * %allps%,&&j,
IFEX $%lpt%>0,
IFEX $%OFF%<0, TEAM SET OFF=%OFFH%|SET SZ=%SZH%
ENVI-ret %~2=%&OFF%
ENVI-ret %~3=%&SZ%
GetUDPart "%&MBROS%"  &OFF  &SZ  "%listudmflags%" ""   "%SzOnly%"  -GPTAtt
SET &bOne=0
FIND $%mhide1%%mhide%%mall%=000, SET bOne=1
IFEX $%&SZ%<1, IFEX $%bOne%=1,  EXIT
SET gUDMID=1
SET &bClrOnly=
IFEX $%ClearTmp%>1, SET &bClrOnly=1! SET &bClrOnly=
IFEX $%ClearTmp%>=1, ClearTmpMBROS "%bClrOnly%" %&hd%
IFEX $%&SZ%>=1, IFEX $%ClearTmp%>=1, ClearTmpMBROS "%bClrOnly%" %&hd%
IFEX $%ClearTmp%>1, EXIT _SUB
IFEX $%udmid%<>-0x8000000, SET bOne=0
SET &op_=%op%
-PARTX[%PARTX%]
SET &EFILDROFF=-2
SET &BIOSBOTOFF=-2
SET &mhidex=1
--分区列表[%&PARTX%]
MSTR  &&INFI,&&OFF,&&SZ,&&TPX,&&ATTX,&&NM,&&DRV,&&TPNM,&&TPI,&&ID,&&ATT=<~1*>%&PRTI%
SET &xNmUDM=%&NM%
-----check udmid[%id%]  [%udmid%]
IFEX $[ %udmid%<>-0x8000000 & %udmid%<>%ID% ], EXIT -
FIND $%bOne%=1,  IFEX $%ID%<>1, EXIT -
SET &bUDMtp=2
IFEX $[ %TPX%=%TP_PT_HIDE% | %TPX%=%TP_PT_HIDE% ], SET bUDMtp=0
SET bUDMtp=1
IFEX $%ID%=1, SET bUDMtp=1
SET  gUDMID=1
IFEX $%bUDMtp%=1, SET  gUDMID=1! SET gUDMID=0
IFEX $[ %&SZ%<=0 | %&OFF%<=0 ], EXIT -
SET &mnt=0
SET &TPIH=0
CALC #&&TPIH= ( %TPI% ) | 0x10
FIND $%ATT%=, CALC #&&TPIH= ( %TPI% ) | 0x10! CALC -base=16 #&&TPIH= ( %ATT% ) & 0xC000000000000000
IFEX $%_udm_%<1, SET mnt=1
IFEX $%bUDMtp%=1,!!  IFEX $%_udm_%<1, SET mnt=1
IFEX $%TPX%=%TP_PT_HIDE%,!!  FIND $%mhidex%=1, SET mnt=1
IFEX $%bUDMtp%=2,!!   IFEX $%_udm_%<1, FIND $%mall%=1,  SET mnt=1
IFEX $[ %TPX%=%TP_PT_NORM% & %mnom%<>1 & %mnorhide%>0 & %TPIH%<>0 ], SET mnt=2
IFEX $%TPX%=%TP_PT_NORM%,!!  FIND $%mnom%=1,  SET mnt=2
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%SZ%s<32K, EXIT -
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%TPX%=0xEE, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EFILDR%,  CALC -err=-2 #EFILDROFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%EFILDROFF%, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EMBED%,  CALC -err=-2 #BIOSBOTOFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%BIOSBOTOFF%, EXIT -
IFEX $%udmid%>0, IFEX $[ %bUDMtp%=1 | %bUDMtp%=2 ], SET mnt=3
EXIT  -
FIND $%mnt%=0,  EXIT  -
MSTR  &&INFI,&&OFF,&&SZ,&&TPX,&&ATTX,&&NM,&&DRV,&&TPNM,&&TPI,&&ID,&&ATT=<~1*>%&PRTI%
SET &xNmUDM=%&NM%
-----check udmid[%id%]  [%udmid%]
IFEX $[ %udmid%<>-0x8000000 & %udmid%<>%ID% ], EXIT -
FIND $%bOne%=1,  IFEX $%ID%<>1, EXIT -
SET &bUDMtp=2
IFEX $[ %TPX%=%TP_PT_HIDE% | %TPX%=%TP_PT_HIDE% ], SET bUDMtp=0
SET bUDMtp=1
IFEX $%ID%=1, SET bUDMtp=1
SET  gUDMID=1
IFEX $%bUDMtp%=1, SET  gUDMID=1! SET gUDMID=0
IFEX $[ %&SZ%<=0 | %&OFF%<=0 ], EXIT -
SET &mnt=0
SET &TPIH=0
CALC #&&TPIH= ( %TPI% ) | 0x10
FIND $%ATT%=, CALC #&&TPIH= ( %TPI% ) | 0x10! CALC -base=16 #&&TPIH= ( %ATT% ) & 0xC000000000000000
IFEX $%_udm_%<1, SET mnt=1
IFEX $%bUDMtp%=1,!!  IFEX $%_udm_%<1, SET mnt=1
IFEX $%TPX%=%TP_PT_HIDE%,!!  FIND $%mhidex%=1, SET mnt=1
IFEX $%bUDMtp%=2,!!   IFEX $%_udm_%<1, FIND $%mall%=1,  SET mnt=1
IFEX $[ %TPX%=%TP_PT_NORM% & %mnom%<>1 & %mnorhide%>0 & %TPIH%<>0 ], SET mnt=2
FIND $%mnom%=1,  SET mnt=2
IFEX $%TPX%=%TP_PT_NORM%,!!  FIND $%mnom%=1,  SET mnt=2
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%SZ%s<32K, EXIT -
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%TPX%=0xEE, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EFILDR%,  CALC -err=-2 #EFILDROFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%EFILDROFF%, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EMBED%,  CALC -err=-2 #BIOSBOTOFF=%OFF%
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%BIOSBOTOFF%, EXIT -
IFEX $%udmid%>0, IFEX $[ %bUDMtp%=1 | %bUDMtp%=2 ], SET mnt=3
EXIT  -
FIND $%mnt%=0,  EXIT  -
MSTR  &&INFI,&&OFF,&&SZ,&&TPX,&&ATTX,&&NM,&&DRV,&&TPNM,&&TPI,&&ID,&&ATT=<~1*>%&PRTI%
SET &xNmUDM=%&NM%
-----check udmid[%id%]  [%udmid%]
IFEX $[ %udmid%<>-0x8000000 & %udmid%<>%ID% ], EXIT -
FIND $%bOne%=1,  IFEX $%ID%<>1, EXIT -
SET &bUDMtp=2
SET bUDMtp=0
IFEX $[ %TPX%=%TP_PT_HIDE% | %TPX%=%TP_PT_HIDE% ], SET bUDMtp=0
IFEX $%ID%=1, SET bUDMtp=1
SET gUDMID=0
IFEX $%bUDMtp%=1, SET  gUDMID=1! SET gUDMID=0
IFEX $[ %&SZ%<=0 | %&OFF%<=0 ], EXIT -
SET &mnt=0
SET &TPIH=0
CALC #&&TPIH= ( %TPI% ) | 0x10
FIND $%ATT%=, CALC #&&TPIH= ( %TPI% ) | 0x10! CALC -base=16 #&&TPIH= ( %ATT% ) & 0xC000000000000000
IFEX $%bUDMtp%=1,!!  IFEX $%_udm_%<1, SET mnt=1
SET mnt=1
FIND $%mhidex%=1, SET mnt=1
IFEX $%TPX%=%TP_PT_HIDE%,!!  FIND $%mhidex%=1, SET mnt=1
IFEX $%bUDMtp%=2,!!   IFEX $%_udm_%<1, FIND $%mall%=1,  SET mnt=1
IFEX $[ %TPX%=%TP_PT_NORM% & %mnom%<>1 & %mnorhide%>0 & %TPIH%<>0 ], SET mnt=2
IFEX $%TPX%=%TP_PT_NORM%,!!  FIND $%mnom%=1,  SET mnt=2
IFEX $%SZ%s<32K, EXIT -
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%SZ%s<32K, EXIT -
IFEX $%TPX%=0xEE, EXIT -
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%TPX%=0xEE, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EFILDR%,  CALC -err=-2 #EFILDROFF=%OFF%
IFEX $%OFF%=%EFILDROFF%, EXIT -
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%EFILDROFF%, EXIT -
IFEX $%bUDMtp%=2,!!   IFEX $%TPX%=%TP_EMBED%,  CALC -err=-2 #BIOSBOTOFF=%OFF%
IFEX $%OFF%=%BIOSBOTOFF%, EXIT -
IFEX $%TPX%=%TP_PT_HIDE%,!!  IFEX $%OFF%=%BIOSBOTOFF%, EXIT -
IFEX $%udmid%>0, IFEX $[ %bUDMtp%=1 | %bUDMtp%=2 ], SET mnt=3
FIND $%mnt%=0,  EXIT  -
CALC #ATTX=%ATTX%
SET op=%op_%
CALC &&ro=1 & %ATTX%
CALC &&NoAMount=4 & %ATTX%
CALC &&NoDrive=8 & %ATTX%
IFEX $[ %NoAMount%<>0 | %NoDrive%<>0 ],  EXIT  -
IFEX $0<>%ro%, TEAM SET op=-o ro
SET  PART_TP=hd
IFEX $%TP_ISO%=%tpx%, SET  PART_TP=cd
IFEX $%TP_PE_ISO%=%tpx%, SET  PART_TP=cd
IFEX $cd<>%PART_TP%, TEAM SET op=-o ro
SET &MountDrv=
FDRV &&ALL=*
SET &K=1
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
MSTR &&d=%K%,1,%mountdrvs%
CALC K=%K% + 1
FIND $%d%=, EXIT
LPOS &I=%&d%,1,%ALL%
ENVI &MountDrv=%d%:
EXIT
TEAM ENVI &MountDrv=%d%:| EXIT
IFEX $%I%<1, TEAM ENVI &MountDrv=%d%:| EXIT
LOOP #1=1,
ENVI-ret %~1=%&MountDrv%
GetFreeDrive &MountDrv
FIND $%bOne%%OnlyOne%<>11, GetFreeDrive &MountDrv
IFEX $%umount%<>0, FIND $%MountDrv%=,  EXIT  FORX
SET &TPX=%~2
CALC #&&SZb=%&SZ%s
CALC #&&OFFb=%&OFF%s
CALC #&&SZAllb=%&SZb% + %&OFFb%
SET &drvm=
ENVI %~1=%~2#%~3#%~4$
CALL *  GetWimName  &&WimName PhysicalDrive%&hd%  %&OFF%   %&SZ%
-[FN:%FN%]
SET-def id=-1
SET-def drv=
SET-def FN=%~3
STRL &&len=%FN%
CALC &&len2=%len% - 1
SET  &FN2=%FN%
LSTR &&L4=4,%FN%
LSTR FN2=%len2%,%FN%
FIND $\??\=%L4%, SET len=0! LSTR FN2=%len2%,%FN%
SET &off=%~4
CALC #off=%off%
@TEAM SET &off=%~4| CALC #off=%off%
SET &FNB=%~5
STRL &&lenB=%FNB%
FIND $%&FNB%=, SET FNB=*N/A*
RAMD ImDisk*&&all -nexe  -l -n
SET-def vi=
SET-def nm=
RAMD ImDisk*&&v  -l -u %&i%
READ  -*,1,&vi,&v
READ  -*,3,&&v3,&v
MSTR  &&v3a,&&v3b=<1*>%&v3%
FIND $%&v3a%<>offset:, SET v3b=0
MSTR &nm=6,%&len%,%&vi%
MSTR &nmB=6,%&lenB%,%&vi%
IFEX $[ '%&FN%'<>'%&nm%' & '%&FN2%'<>'%&nm%' &   ( '%&FNB%'<>'%&nmB%' |  %v3b%<>%off% ) ], EXIT -
MSTR &drv=1,2,%&vi%
FIND $%drv%= :, SET drv=
ENVI &id=%&i%
EXIT FORX
FORX * %&all%,&&i,
ENVI-ret %~1=%&id%
ENVI-ret %~2=%&drv%
FINDImdisk  &&id  &&drvm  "\BaseNamedObjects\Global\%&WimName%"  %&OFF%s  \??\PhysicalDrive%&hd%
IFEX $%&umount%=1,
PART list part %hd%,&&drvs
SET &OldDrv=
SET &PyId=-1
SET OldDrv=%&drvm%
FIND $[ %&umount%<>1 & _%drvm%<>_ ], SET OldDrv=%&drvm%
FIND $%&BWin%=0,
IFEX $%_mh%>=-1,
CALC #&&d1x=%Lid1%
IFEX $%&d1x%<1, EXIT  -
SET &hd=%1
SET &j=%2
SET &V=
@TEAM SET &hd=%1| SET &j=%2| SET &V=
FIND $%&VAinf%=, TEAM PART -hextp -phy#  LIST  part  %&hd%:%&j%,&&V| ENVI-ret %~3=%&V%| EXIT _SUB
MSTR &&dsk,&&prt=<1><2>%Vi%
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
MSTR &&dsk,&&prt=<1><2>%Vi%
MSTR &V=<3->%Vi%
EXIT  FORX
TEAM MSTR &V=<3->%Vi%| EXIT  FORX
IFEX $[ %&dsk%=%&hd% & '%&prt%'='%&j%' ], TEAM MSTR &V=<3->%Vi%| EXIT  FORX
FORX *NL &VAinf,&&Vi,
ENVI-ret %~3=%&V%
GETPARTINF %hd%  %Lid1%  &&V
MSTR &&tp,&&AcGPT,&&start1,&&sz1,&&ATT,&&PyId1,&&drv1=<2><3><4><5><6><8><9>%&V%
SET &GPTRo=0
FIND $GPT=%AcGPT%, CALC -base=16 #&&GPTRo=0x%ATT% & 0x1000000000000000! SET &GPTRo=0
-[MountMBROS-msg]tp[%&tp%] start[%&start1%]  sz[%&sz1%] PyId1[%&PyId1%]  drv1[%&drv1%]   dsk[%hd%]
SET &hv=0
IFEX $%&OFFb%=%&start1%,  SET hv=1
FIND $%&drv1%<>,!!  IFEX $%&OFFb%=%&start1%,  SET hv=1
FIND $%gUDMID%=1,!!  FIND $%&drv1%<>,!!  IFEX $0=%&start1%,!! IFEX $%sz1%>=%SZAllb%,!!  SET hv=1
SET &drv1x=%drv1%
SET &hvx=%hv%
IFEX $[ %umount%=0x22 & %hvx%=1 & %GPTRo%<>0 ],
IFEX $%umount%>=2,  IFEX $%hvx%=1, TEAM  SHOW *- %hd%#%PyId1%,| set hv=2| SET drv1=
IFEX $%umount%=2,   IFEX $%hv%=2, TEAM  CALL SaveRet  "OK %drv1x% (hd%hd%#%PyId1%) UMOUNT-uh" | EXIT FORX
IFEX $%hv%=1,  TEAM SET OldDrv=%OldDrv%%drv1%| EXIT  FORX
FIND $%&BWin%=0,
FIND $%gUDMID%=1, FIND $%&drv1%<>,!!  IFEX $[ 0=%start1% & %sz1%>=%SZAllb% & %GPTRo%=0 ],!!  TEAM SUBJ * %&drv1%| SET drv1=
FIND $%&drv1%=,!!  IFEX $%&OFFb%=%&start1%,!!  TEAM SET PyId=%&PyId1%
FIND $%umount%%OnlySoft%=00,!!   FIND $%&drv1%=,!!  IFEX $%&OFFb%=%&start1%,!!  TEAM SET PyId=%&PyId1%
CALC #&&d1x=%Lid1%
EXIT  -
IFEX $%&d1x%<1, EXIT  -
CALC #&&d1x=%Lid1%
EXIT  -
IFEX $%&d1x%<1, EXIT  -
CALC #&&d1x=%Lid1%
EXIT  -
IFEX $%&d1x%<1, EXIT  -
FORX * %&drvs%,&&Lid1,
IFEX $[ %umount%>=1 & %umount%<=2 ],  EXIT _SUB
----////////////////下面设计加载 mnorhide[%mnorhide%] _fRO[%_fRO%] PyId[%PyId%]
FIND $%MountDrv%=,  EXIT  _SUB
IFEX $[ %&TPX%=%TP_PT_NORM% & %mnorhide%<1 ], EXIT  _SUB
SET &udx=udm?
SET udx=pt.s
IFEX $%TPX%>=%PT_PT_MASK%, SET udx=pt.s
IFEX $%TPX%>=%TP_UP_MASK%, SET udx=u+
IFEX $%TPX%>=%TP_UD_MASK%, SET udx=ud
SET udx=udm
IFEX $%TPX%>0 & %TPX%<=0xFF, SET udx=udm
FIND $%TPX%=, SET udx=imd
SET &MountDrv=%~1
SET &vInvalid=0
FIND $%&CheckFileA%<>,
IFEX $%vInvalid%=1, TEAM ENVI-ret %~2=1| EXIT _SUB
FIND $%&CheckFile%<>,
ENVI-ret %~2=%&vInvalid%
OnCheckFile %&drvm% &&InValid
FIND $%InValid%=1, EXIT _SUB
TEAM OnCheckFile %&drvm% &&InValid| FIND $%InValid%=1, EXIT _SUB
ENVI  &retv=%~1
FIND $%&retv%=, ENVI  &retv=%~1! ENVI  &retv=%retv%%&NL%%~1
WRIT -,$+0,%~1
CALL SaveRet  "%drvm%  (hd%&hd%) Old (%udx%) %findLevel%" 
EXIT _SUB
TEAM CALL SaveRet  "%drvm%  (hd%&hd%) Old (%udx%) %findLevel%" | EXIT _SUB
FIND $[ '%&OldDrv%'<>'' & '%&OldDrv%'='%drvm%' ],
CALL MountMBROS1 %4 %&TPX%
IFEX $[ %upoff%<>%OFF% | %upsz%<>%SZ% ], CALL MountMBROS1 %4 %&TPX%
FIND $%bOne%=1,  EXIT FORX
FORX *NL &PARTX,&&PRTI,
CALL MountMBROS    "%mountop%"   "%&DEV%"  "%&drv%"  &retv  %_exe%
IFEX $[ %Do2%>0 & %doudm%>0 ],  CALL MountMBROS    "%mountop%"   "%&DEV%"  "%&drv%"  &retv  %_exe%
SET &retv2=%retv%
SET retv=%retv1%
TEAM SET &retv2=%retv%| SET retv=%retv1%
SET retv=%~1
FIND $%&retv%=, SET retv=%~1! SET retv=%&retv%%&NL%%~1
SaveRetV "%retv2%"
FIND $%retv2%<>, SaveRetV "%retv2%"
FORX *NL &AllDevs,&DEV,
FORX * 1,&&LOOP1,
FIND $%&retnm%<>,  ENVI-ret %&retnm%=%&retv%
FIND $%&findbootnm%<>, ENVI-ret %&findbootnm%=%&bootcfg%
EXIT= 0
CALL * mountudm %&arg2x%
@LOGS **ON=0
@IFEX $%&bLOGS%>0, @LOGS
@IFEX $[ %&bLOGS%>0 & '%&OldLOGS%'<>'' ], @LOGS --a --rt --rt? %&OldLOGS%
@RestoLog
EXIT FILE
TEAM CALL * mountudm %&arg2x%| @RestoLog| EXIT FILE
FIND $%&va%=mount, TEAM CALL * mountudm %&arg2x%| @RestoLog| EXIT FILE
MOUN  -udm  -mall  -mhide  -u+  -udm-  \\.\PhysicalDrive%&hd%  C-
FORX * %&disk%,&&hd,
CALL UDM_Plus
FILE %EXWALL%=>%WinDir%\System32\
FORX !\ILMT\Desk.jpg,EXWALL,1,FILE %EXWALL%=>%WinDir%\System32\
TEAM CALL UDM_Plus|FORX !\ILMT\Desk.jpg,EXWALL,1,FILE %EXWALL%=>%WinDir%\System32\
IFEX X:\ILMT\Desk.jpg,WALL X:\ILMT\Desk.jpg!TEAM CALL UDM_Plus|FORX !\ILMT\Desk.jpg,EXWALL,1,FILE %EXWALL%=>%WinDir%\System32\
WALL %WinDir%\System32\DESK.JPG
IFEX %WinDir%\System32\Desk.jpg,WALL %WinDir%\System32\DESK.JPG
EXEC @=fbinst.exe (ud) output "ILMT/ExTools.wim" X:/ILMT/%~nx
WAIT 100
TEAM EXEC @=fbinst.exe (ud) output "ILMT/ExTools.wim" X:/ILMT/%~nx|WAIT 100
MOUN %EXT%,Y:\扩展外置\
FORX !\ILMT\ExTools.wim,EXT,1,MOUN %EXT%,Y:\扩展外置\
LOAD Y:\扩展外置\EXT.INI*10PE
TEAM FORX !\ILMT\ExTools.wim,EXT,1,MOUN %EXT%,Y:\扩展外置\|LOAD Y:\扩展外置\EXT.INI*10PE
IFEX Y:\扩展外置\*.INI,TEAM SET EXDIR=Y:\扩展外置\|LSTR EXT=2,%EXDIR%|FDRV *setvol %EXT%=老毛桃PE工具盘
CALL UD_PELOAD
TEXT 
TEXT 正在加载老毛桃 WinPE 桌面 #0xFFFFFF L T%ScrH%  R B  +- $25:Microsoft YaHei
TEAM TEXT |TEXT 正在加载老毛桃 WinPE 桌面 #0xFFFFFF L T%ScrH%  R B  +- $25:Microsoft YaHei
SHEL %WinDir%\Explorer.exe
TEAM SHEL %WinDir%\Explorer.exe
EXIT LOOP
FIND Explorer.exe,EXIT LOOP
TEAM FIND Explorer.exe,EXIT LOOP|WAIT 100
LOOP #1=1,TEAM FIND Explorer.exe,EXIT LOOP|WAIT 100
FORX !\LMT\LMTPlus,MyUp,1,LOAD %MyUp%*老毛桃Team_UpDate
PINT "%Programs%\系统微调\F10-设置虚拟内存.LNK",TaskBand
PINT "%Programs%\图形图像\截图.LNK",TaskBand
PINT "%Programs%\附件工具\屏幕键盘.LNK",TaskBand
PINT "%Programs%\文件管理\文件搜索.LNK",TaskBand
PINT "%WinDir%\Explorer.EXE",TaskBand
REGI HKCU\Software\Microsoft\Windows\Shell\Bags\1\Desktop\IconSize=#0x20
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
SITE %DD%,+S
FILE  %WinDir%\System32\desktop.ini=>%DD%
TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
FORX @X:\Users\Default\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\*,DD,0,TEAM SITE %DD%,+S|FILE  %WinDir%\System32\desktop.ini=>%DD%
FILE %Public%\Desktop\desktop.ini
FILE %desktop%\Desktop.ini
WAIT 365
TEAM FILE %Public%\Desktop\desktop.ini|FILE %desktop%\Desktop.ini|WAIT 365
KILL EXPLORER
LOGO
TEXT
TEAM KILL EXPLORER|LOGO|TEXT
REGI #HKCU\Software\Microsoft\Windows\Shell\Bags\1\Desktop\IconSize,&&SmallIcon
IFEX $%SmallIcon%<>0x20,TEAM REGI HKCU\Software\Microsoft\Windows\Shell\Bags\1\Desktop\IconSize=#0x20|KILL EXPLORER
LOAD NEI*VolICO
LOAD Nei*AppleST
TEAM LOAD NEI*VolICO|LOAD Nei*AppleST
CALL $--ret:hHwnd user32.dll,FindWindowW,Shell_TrayWnd,
CALL $user32.dll,SendMessageW,#%hHwnd%,#1466,#0,#0
TEAM CALL $--ret:hHwnd user32.dll,FindWindowW,Shell_TrayWnd,|CALL $user32.dll,SendMessageW,#%hHwnd%,#1466,#0,#0
EXEC %WinDir%\SysWOW64\LMTGhost.EXE /live
MDIR %WinDir%\MySRS
EXEC %WinDir%\System32\NetInstall.exe go
TEAM MDIR %WinDir%\MySRS|EXEC %WinDir%\System32\NetInstall.exe go
SIZE iSize=%MyFix%
FILE %MyFix%=>%WinDir%\MySRS
IFEX $%iSize%<104857600,FILE %MyFix%=>%WinDir%\MySRS
FORX @!\LMT\LMTDRV\Fix,MyFix,1,
SIZE FixSize=%WinDir%\MySRS\Fix
EXIT
IFEX $%FixSize%>10485760,EXIT
LOAD pecmd.ini
